

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Oct 01 12:00:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.35
    52                           ; Generated 05/05/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	nvCOMRAM
    88  000032                     __pnvCOMRAM:
    89                           	callstack 0
    90  000032                     _EUSART1_ErrorHandler:
    91                           	callstack 0
    92  000032                     	ds	2
    93  000034                     _EUSART1_OverrunErrorHandler:
    94                           	callstack 0
    95  000034                     	ds	2
    96  000036                     _EUSART1_FramingErrorHandler:
    97                           	callstack 0
    98  000036                     	ds	2
    99  000038                     _EUSART1_RxDefaultInterruptHandler:
   100                           	callstack 0
   101  000038                     	ds	2
   102  00003A                     _EUSART1_TxDefaultInterruptHandler:
   103                           	callstack 0
   104  00003A                     	ds	2
   105  00003C                     _ADCC_ADI_InterruptHandler:
   106                           	callstack 0
   107  00003C                     	ds	2
   108  00003E                     _eusart1TxBufferRemaining:
   109                           	callstack 0
   110  00003E                     	ds	1
   111  0000                     _PIR3bits	set	3789
   112  0000                     _PIE3bits	set	3781
   113  0000                     _PMD5	set	3814
   114  0000                     _PMD4	set	3813
   115  0000                     _PMD3	set	3812
   116  0000                     _PMD2	set	3811
   117  0000                     _PMD1	set	3810
   118  0000                     _PMD0	set	3809
   119  0000                     _OSCTUNE	set	3805
   120  0000                     _OSCFRQ	set	3806
   121  0000                     _OSCEN	set	3804
   122  0000                     _OSCCON3	set	3802
   123  0000                     _OSCCON1	set	3800
   124  0000                     _PIR4bits	set	3790
   125  0000                     _PIE1bits	set	3779
   126  0000                     _PIR1bits	set	3787
   127  0000                     _RC7PPS	set	3838
   128  0000                     _RX1PPS	set	3765
   129  0000                     _ADCON1bits	set	3929
   130  0000                     _ADCON2bits	set	3930
   131  0000                     _ADCON3bits	set	3931
   132  0000                     _ADACQ	set	3932
   133  0000                     _ADCLK	set	3927
   134  0000                     _ADACT	set	3926
   135  0000                     _ADREF	set	3928
   136  0000                     _ADCON3	set	3931
   137  0000                     _ADCON2	set	3930
   138  0000                     _ADCON1	set	3929
   139  0000                     _ADPRE	set	3934
   140  0000                     _ADCAP	set	3933
   141  0000                     _ADPCH	set	3935
   142  0000                     _INLVLE	set	3882
   143  0000                     _INLVLD	set	3874
   144  0000                     _INLVLC	set	3869
   145  0000                     _INLVLB	set	3861
   146  0000                     _INLVLA	set	3853
   147  0000                     _SLRCONE	set	3883
   148  0000                     _SLRCOND	set	3875
   149  0000                     _SLRCONC	set	3870
   150  0000                     _SLRCONB	set	3862
   151  0000                     _SLRCONA	set	3854
   152  0000                     _ODCOND	set	3876
   153  0000                     _ODCONC	set	3871
   154  0000                     _ODCONB	set	3863
   155  0000                     _ODCONA	set	3855
   156  0000                     _ODCONE	set	3884
   157  0000                     _WPUC	set	3872
   158  0000                     _WPUA	set	3856
   159  0000                     _WPUB	set	3864
   160  0000                     _WPUE	set	3885
   161  0000                     _WPUD	set	3877
   162  0000                     _ANSELA	set	3857
   163  0000                     _ANSELE	set	3886
   164  0000                     _ANSELB	set	3865
   165  0000                     _ANSELC	set	3873
   166  0000                     _ANSELD	set	3878
   167  0000                     _INTCONbits	set	4082
   168  0000                     _LATDbits	set	3974
   169  0000                     _RC1REG	set	3993
   170  0000                     _RC1STAbits	set	3997
   171  0000                     _TX1REG	set	3994
   172  0000                     _TX1STAbits	set	3998
   173  0000                     _SP1BRGH	set	3996
   174  0000                     _SP1BRGL	set	3995
   175  0000                     _TX1STA	set	3998
   176  0000                     _RC1STA	set	3997
   177  0000                     _BAUD1CON	set	3999
   178  0000                     _PR6	set	4016
   179  0000                     _TMR6	set	4015
   180  0000                     _T6CONbits	set	4017
   181  0000                     _T6RSTbits	set	4020
   182  0000                     _T6HLTbits	set	4018
   183  0000                     _T6CON	set	4017
   184  0000                     _T6TMR	set	4015
   185  0000                     _T6PR	set	4016
   186  0000                     _T6RST	set	4020
   187  0000                     _T6HLT	set	4018
   188  0000                     _T6CLKCON	set	4019
   189  0000                     _ADERRL	set	3950
   190  0000                     _ADERRH	set	3951
   191  0000                     _ADPREVL	set	3937
   192  0000                     _ADPREVH	set	3938
   193  0000                     _ADFLTRL	set	3954
   194  0000                     _ADFLTRH	set	3955
   195  0000                     _ADSTATbits	set	3941
   196  0000                     _ADACCL	set	3952
   197  0000                     _ADACCH	set	3953
   198  0000                     _ADCNT	set	3943
   199  0000                     _ADRESL	set	3939
   200  0000                     _ADRESH	set	3940
   201  0000                     _ADCON0bits	set	3936
   202  0000                     _ADCON0	set	3936
   203  0000                     _ADSTAT	set	3941
   204  0000                     _ADRPT	set	3942
   205  0000                     _ADSTPTH	set	3945
   206  0000                     _ADSTPTL	set	3944
   207  0000                     _ADUTHH	set	3949
   208  0000                     _ADUTHL	set	3948
   209  0000                     _ADLTHH	set	3947
   210  0000                     _ADLTHL	set	3946
   211  0000                     _TRISD	set	3979
   212  0000                     _TRISC	set	3978
   213  0000                     _TRISB	set	3977
   214  0000                     _TRISA	set	3976
   215  0000                     _TRISE	set	3980
   216  0000                     _LATC	set	3973
   217  0000                     _LATB	set	3972
   218  0000                     _LATA	set	3971
   219  0000                     _LATD	set	3974
   220  0000                     _LATE	set	3975
   221                           
   222                           ; #config settings
   223                           
   224                           	psect	cinit
   225  000B44                     __pcinit:
   226                           	callstack 0
   227  000B44                     start_initialization:
   228                           	callstack 0
   229  000B44                     __initialization:
   230                           	callstack 0
   231                           
   232                           ; Clear objects allocated to BANK1 (64 bytes)
   233  000B44  EE01  F000         	lfsr	0,__pbssBANK1
   234  000B48  0E40               	movlw	64
   235  000B4A                     clear_0:
   236  000B4A  6AEE               	clrf	postinc0,c
   237  000B4C  06E8               	decf	wreg,f,c
   238  000B4E  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK0 (128 bytes)
   241  000B50  EE00  F060         	lfsr	0,__pbssBANK0
   242  000B54  0E80               	movlw	128
   243  000B56                     clear_1:
   244  000B56  6AEE               	clrf	postinc0,c
   245  000B58  06E8               	decf	wreg,f,c
   246  000B5A  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to COMRAM (21 bytes)
   249  000B5C  EE00  F01D         	lfsr	0,__pbssCOMRAM
   250  000B60  0E15               	movlw	21
   251  000B62                     clear_2:
   252  000B62  6AEE               	clrf	postinc0,c
   253  000B64  06E8               	decf	wreg,f,c
   254  000B66  E1FD               	bnz	clear_2
   255  000B68                     end_of_initialization:
   256                           	callstack 0
   257  000B68                     __end_of__initialization:
   258                           	callstack 0
   259  000B68  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  000B6A  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  000B6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  000B6E  6EF8               	movwf	tblptru,c
   263  000B70  0100               	movlb	0
   264  000B72  EF6D  F000         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMRAM
   267  00001D                     __pbssCOMRAM:
   268                           	callstack 0
   269  00001D                     _entrega:
   270                           	callstack 0
   271  00001D                     	ds	7
   272  000024                     _adc:
   273                           	callstack 0
   274  000024                     	ds	2
   275  000026                     _estados:
   276                           	callstack 0
   277  000026                     	ds	2
   278  000028                     _TengoADC:
   279                           	callstack 0
   280  000028                     	ds	1
   281  000029                     _bandera:
   282                           	callstack 0
   283  000029                     	ds	1
   284  00002A                     _error_num:
   285                           	callstack 0
   286  00002A                     	ds	1
   287  00002B                     _funciona:
   288                           	callstack 0
   289  00002B                     	ds	1
   290  00002C                     _eusart1RxLastError:
   291                           	callstack 0
   292  00002C                     	ds	1
   293  00002D                     _eusart1RxCount:
   294                           	callstack 0
   295  00002D                     	ds	1
   296  00002E                     _eusart1RxTail:
   297                           	callstack 0
   298  00002E                     	ds	1
   299  00002F                     _eusart1RxHead:
   300                           	callstack 0
   301  00002F                     	ds	1
   302  000030                     _eusart1TxTail:
   303                           	callstack 0
   304  000030                     	ds	1
   305  000031                     _eusart1TxHead:
   306                           	callstack 0
   307  000031                     	ds	1
   308                           
   309                           	psect	bssBANK0
   310  000060                     __pbssBANK0:
   311                           	callstack 0
   312  000060                     _eusart1RxStatusBuffer:
   313                           	callstack 0
   314  000060                     	ds	64
   315  0000A0                     _eusart1TxBuffer:
   316                           	callstack 0
   317  0000A0                     	ds	64
   318                           
   319                           	psect	bssBANK1
   320  000100                     __pbssBANK1:
   321                           	callstack 0
   322  000100                     _eusart1RxBuffer:
   323                           	callstack 0
   324  000100                     	ds	64
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	callstack 0
   329  000001                     ?_ADCC_GetConversionResult:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000001                     	ds	2
   334  000003                     ??_ADCC_GetConversionResult:
   335                           
   336                           ; 1 bytes @ 0x2
   337  000003                     	ds	2
   338  000005                     ??_ADC_Trabajando:
   339                           
   340                           ; 1 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     ??_INTERRUPT_InterruptManager:
   343                           
   344                           ; 1 bytes @ 0x5
   345  000006                     	ds	4
   346  00000A                     ?___wmul:
   347                           	callstack 0
   348  00000A                     ?___awdiv:
   349                           	callstack 0
   350  00000A                     ?___lwdiv:
   351                           	callstack 0
   352  00000A                     ?___lwmod:
   353                           	callstack 0
   354  00000A                     EUSART1_Read@readValue:
   355                           	callstack 0
   356  00000A                     EUSART1_Write@txData:
   357                           	callstack 0
   358  00000A                     ADCC_SetADIInterruptHandler@InterruptHandler:
   359                           	callstack 0
   360  00000A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   361                           	callstack 0
   362  00000A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   363                           	callstack 0
   364  00000A                     EUSART1_SetErrorHandler@interruptHandler:
   365                           	callstack 0
   366  00000A                     EUSART1_SetTxInterruptHandler@interruptHandler:
   367                           	callstack 0
   368  00000A                     EUSART1_SetRxInterruptHandler@interruptHandler:
   369                           	callstack 0
   370  00000A                     ___wmul@multiplier:
   371                           	callstack 0
   372  00000A                     ___awdiv@dividend:
   373                           	callstack 0
   374  00000A                     ___lwdiv@dividend:
   375                           	callstack 0
   376  00000A                     ___lwmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x9
   380  00000A                     	ds	2
   381  00000C                     ___wmul@multiplicand:
   382                           	callstack 0
   383  00000C                     ___awdiv@divisor:
   384                           	callstack 0
   385  00000C                     ___lwdiv@divisor:
   386                           	callstack 0
   387  00000C                     ___lwmod@divisor:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0xB
   391  00000C                     	ds	2
   392  00000E                     ___awdiv@counter:
   393                           	callstack 0
   394  00000E                     ___lwmod@counter:
   395                           	callstack 0
   396  00000E                     ___wmul@product:
   397                           	callstack 0
   398  00000E                     ___lwdiv@quotient:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xD
   402  00000E                     	ds	1
   403  00000F                     ___awdiv@sign:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0xE
   407  00000F                     	ds	1
   408  000010                     ___lwdiv@counter:
   409                           	callstack 0
   410  000010                     ___awdiv@quotient:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xF
   414  000010                     	ds	2
   415  000012                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x11
   418  000012                     	ds	2
   419  000014                     main@cont_T6PR:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x13
   423  000014                     	ds	2
   424  000016                     main@pack:
   425                           	callstack 0
   426                           
   427                           ; 5 bytes @ 0x15
   428  000016                     	ds	5
   429  00001B                     main@valor:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x1A
   433  00001B                     	ds	2
   434                           
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 65 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  pack            5   21[COMRAM] volatile unsigned char [
   445 ;;  valor           2   26[COMRAM] volatile int 
   446 ;;  cont_T6PR       2   19[COMRAM] unsigned short 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   457 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   459 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   460 ;;Total ram usage:       11 bytes
   461 ;; Hardware stack levels required when called:    7
   462 ;; This function calls:
   463 ;;		_ADCC_Initialize
   464 ;;		_ADCC_SetADIInterruptHandler
   465 ;;		_EUSART1_Read
   466 ;;		_EUSART1_Write
   467 ;;		_EUSART1_is_rx_ready
   468 ;;		_SYSTEM_Initialize
   469 ;;		___awdiv
   470 ;;		___lwdiv
   471 ;;		___lwmod
   472 ;;		___wmul
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text0
   479  0000DA                     __ptext0:
   480                           	callstack 0
   481  0000DA                     _main:
   482                           	callstack 24
   483  0000DA                     
   484                           ;main.c: 72:     SYSTEM_Initialize();
   485  0000DA  ECFC  F005         	call	_SYSTEM_Initialize	;wreg free
   486                           
   487                           ;main.c: 73:     ADCC_Initialize();
   488  0000DE  ECE0  F004         	call	_ADCC_Initialize	;wreg free
   489  0000E2                     
   490                           ;main.c: 80:     (INTCONbits.GIE = 1);
   491  0000E2  8EF2               	bsf	242,7,c	;volatile
   492  0000E4                     
   493                           ;main.c: 86:     (INTCONbits.PEIE = 1);
   494  0000E4  8CF2               	bsf	242,6,c	;volatile
   495                           
   496                           ;main.c: 93: volatile char pack [5];;main.c: 94: volatile int valor;;main.c: 95: uint16_
      +                          t cont_T6PR;;main.c: 97:     ADCC_SetADIInterruptHandler(ADC_Trabajando);
   497  0000E6  0E0E               	movlw	low _ADC_Trabajando
   498  0000E8  6E0A               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
   499  0000EA  0E0B               	movlw	high _ADC_Trabajando
   500  0000EC  6E0B               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
   501  0000EE  EC61  F006         	call	_ADCC_SetADIInterruptHandler	;wreg free
   502  0000F2                     l2258:
   503                           
   504                           ;main.c: 102:     {;main.c: 104:         if(EUSART1_is_rx_ready()){
   505  0000F2  EC33  F006         	call	_EUSART1_is_rx_ready	;wreg free
   506  0000F6  0900               	iorlw	0
   507  0000F8  B4D8               	btfsc	status,2,c
   508  0000FA  EF81  F000         	goto	u971
   509  0000FE  EF83  F000         	goto	u970
   510  000102                     u971:
   511  000102  EF08  F001         	goto	l2302
   512  000106                     u970:
   513  000106  EFDE  F000         	goto	l2300
   514  00010A                     l560:
   515  00010A  9086               	bcf	134,0,c	;volatile
   516  00010C                     
   517                           ;main.c: 108:                     entrega[0]=EUSART1_Read();
   518  00010C  EC3D  F005         	call	_EUSART1_Read	;wreg free
   519  000110  6E1D               	movwf	_entrega^0,c	;volatile
   520  000112                     
   521                           ;main.c: 109:                     if (entrega[0]=='1'){
   522  000112  0E31               	movlw	49
   523  000114  181D               	xorwf	_entrega^0,w,c	;volatile
   524  000116  A4D8               	btfss	status,2,c
   525  000118  EF90  F000         	goto	u981
   526  00011C  EF92  F000         	goto	u980
   527  000120                     u981:
   528  000120  EF08  F001         	goto	l2302
   529  000124                     u980:
   530  000124                     
   531                           ;main.c: 110:                     estados=1;
   532  000124  0E00               	movlw	0
   533  000126  6E27               	movwf	(_estados+1)^0,c	;volatile
   534  000128  0E01               	movlw	1
   535  00012A  6E26               	movwf	_estados^0,c	;volatile
   536  00012C  EF08  F001         	goto	l2302
   537  000130                     l2268:
   538                           
   539                           ;main.c: 114:                     entrega[1]=EUSART1_Read();
   540  000130  EC3D  F005         	call	_EUSART1_Read	;wreg free
   541  000134  6E1E               	movwf	(_entrega+1)^0,c	;volatile
   542  000136                     
   543                           ;main.c: 115:                     estados=2;
   544  000136  0E00               	movlw	0
   545  000138  6E27               	movwf	(_estados+1)^0,c	;volatile
   546  00013A  0E02               	movlw	2
   547  00013C  6E26               	movwf	_estados^0,c	;volatile
   548                           
   549                           ;main.c: 116:                 break;
   550  00013E  EF08  F001         	goto	l2302
   551  000142                     l2272:
   552                           
   553                           ;main.c: 118:                     entrega[2]=EUSART1_Read();
   554  000142  EC3D  F005         	call	_EUSART1_Read	;wreg free
   555  000146  6E1F               	movwf	(_entrega+2)^0,c	;volatile
   556  000148                     
   557                           ;main.c: 119:                     estados=3;
   558  000148  0E00               	movlw	0
   559  00014A  6E27               	movwf	(_estados+1)^0,c	;volatile
   560  00014C  0E03               	movlw	3
   561  00014E  6E26               	movwf	_estados^0,c	;volatile
   562                           
   563                           ;main.c: 120:                 break;
   564  000150  EF08  F001         	goto	l2302
   565  000154                     l2276:
   566                           
   567                           ;main.c: 122:                     entrega[3]=EUSART1_Read();
   568  000154  EC3D  F005         	call	_EUSART1_Read	;wreg free
   569  000158  6E20               	movwf	(_entrega+3)^0,c	;volatile
   570  00015A                     
   571                           ;main.c: 123:                     estados=4;
   572  00015A  0E00               	movlw	0
   573  00015C  6E27               	movwf	(_estados+1)^0,c	;volatile
   574  00015E  0E04               	movlw	4
   575  000160  6E26               	movwf	_estados^0,c	;volatile
   576                           
   577                           ;main.c: 124:                 break;
   578  000162  EF08  F001         	goto	l2302
   579  000166                     l2280:
   580                           
   581                           ;main.c: 126:                     entrega[4]=EUSART1_Read();
   582  000166  EC3D  F005         	call	_EUSART1_Read	;wreg free
   583  00016A  6E21               	movwf	(_entrega+4)^0,c	;volatile
   584  00016C                     
   585                           ;main.c: 127:                     estados=5;
   586  00016C  0E00               	movlw	0
   587  00016E  6E27               	movwf	(_estados+1)^0,c	;volatile
   588  000170  0E05               	movlw	5
   589  000172  6E26               	movwf	_estados^0,c	;volatile
   590                           
   591                           ;main.c: 128:                 break;
   592  000174  EF08  F001         	goto	l2302
   593  000178                     l2284:
   594                           
   595                           ;main.c: 130:                     entrega[5]=EUSART1_Read();
   596  000178  EC3D  F005         	call	_EUSART1_Read	;wreg free
   597  00017C  6E22               	movwf	(_entrega+5)^0,c	;volatile
   598  00017E                     
   599                           ;main.c: 131:                     estados=6;
   600  00017E  0E00               	movlw	0
   601  000180  6E27               	movwf	(_estados+1)^0,c	;volatile
   602  000182  0E06               	movlw	6
   603  000184  6E26               	movwf	_estados^0,c	;volatile
   604                           
   605                           ;main.c: 132:                 break;
   606  000186  EF08  F001         	goto	l2302
   607  00018A                     l2288:
   608                           
   609                           ;main.c: 134:                     entrega[6]=EUSART1_Read();
   610  00018A  EC3D  F005         	call	_EUSART1_Read	;wreg free
   611  00018E  6E23               	movwf	(_entrega+6)^0,c	;volatile
   612  000190                     
   613                           ;main.c: 135:                     if (entrega[6]=='1'){
   614  000190  0E31               	movlw	49
   615  000192  1823               	xorwf	(_entrega+6)^0,w,c	;volatile
   616  000194  A4D8               	btfss	status,2,c
   617  000196  EFCF  F000         	goto	u991
   618  00019A  EFD1  F000         	goto	u990
   619  00019E                     u991:
   620  00019E  EFD6  F000         	goto	l2296
   621  0001A2                     u990:
   622  0001A2                     
   623                           ;main.c: 136:                         funciona=1;
   624  0001A2  0E01               	movlw	1
   625  0001A4  6E2B               	movwf	_funciona^0,c	;volatile
   626  0001A6  8086               	bsf	134,0,c	;volatile
   627  0001A8  EFD8  F000         	goto	l573
   628  0001AC                     l2296:
   629                           
   630                           ;main.c: 139:                         error_num=1;
   631  0001AC  0E01               	movlw	1
   632  0001AE  6E2A               	movwf	_error_num^0,c	;volatile
   633  0001B0                     l573:
   634                           
   635                           ;main.c: 141:                     estados=0;
   636  0001B0  0E00               	movlw	0
   637  0001B2  6E27               	movwf	(_estados+1)^0,c	;volatile
   638  0001B4  0E00               	movlw	0
   639  0001B6  6E26               	movwf	_estados^0,c	;volatile
   640                           
   641                           ;main.c: 142:                 break;
   642  0001B8  EF08  F001         	goto	l2302
   643  0001BC                     l2300:
   644  0001BC  C026  F012         	movff	_estados,??_main	;volatile
   645  0001C0  C027  F013         	movff	_estados+1,??_main+1	;volatile
   646                           
   647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   648                           ; Switch size 1, requested type "simple"
   649                           ; Number of cases is 1, Range of values is 0 to 0
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            4     3 (average)
   653                           ;	Chosen strategy is simple_byte
   654  0001C4  5013               	movf	(??_main+1)^0,w,c
   655  0001C6  0A00               	xorlw	0	; case 0
   656  0001C8  B4D8               	btfsc	status,2,c
   657  0001CA  EFE9  F000         	goto	l2464
   658  0001CE  EF08  F001         	goto	l2302
   659  0001D2                     l2464:
   660                           
   661                           ; Switch size 1, requested type "simple"
   662                           ; Number of cases is 7, Range of values is 0 to 6
   663                           ; switch strategies available:
   664                           ; Name         Instructions Cycles
   665                           ; simple_byte           22    12 (average)
   666                           ;	Chosen strategy is simple_byte
   667  0001D2  5012               	movf	??_main^0,w,c
   668  0001D4  0A00               	xorlw	0	; case 0
   669  0001D6  B4D8               	btfsc	status,2,c
   670  0001D8  EF85  F000         	goto	l560
   671  0001DC  0A01               	xorlw	1	; case 1
   672  0001DE  B4D8               	btfsc	status,2,c
   673  0001E0  EF98  F000         	goto	l2268
   674  0001E4  0A03               	xorlw	3	; case 2
   675  0001E6  B4D8               	btfsc	status,2,c
   676  0001E8  EFA1  F000         	goto	l2272
   677  0001EC  0A01               	xorlw	1	; case 3
   678  0001EE  B4D8               	btfsc	status,2,c
   679  0001F0  EFAA  F000         	goto	l2276
   680  0001F4  0A07               	xorlw	7	; case 4
   681  0001F6  B4D8               	btfsc	status,2,c
   682  0001F8  EFB3  F000         	goto	l2280
   683  0001FC  0A01               	xorlw	1	; case 5
   684  0001FE  B4D8               	btfsc	status,2,c
   685  000200  EFBC  F000         	goto	l2284
   686  000204  0A03               	xorlw	3	; case 6
   687  000206  B4D8               	btfsc	status,2,c
   688  000208  EFC5  F000         	goto	l2288
   689  00020C  EF08  F001         	goto	l2302
   690  000210                     l2302:
   691                           
   692                           ;main.c: 163:         if(funciona == 1){
   693  000210  042B               	decf	_funciona^0,w,c	;volatile
   694  000212  A4D8               	btfss	status,2,c
   695  000214  EF0E  F001         	goto	u1001
   696  000218  EF10  F001         	goto	u1000
   697  00021C                     u1001:
   698  00021C  EF8D  F002         	goto	l2394
   699  000220                     u1000:
   700  000220                     
   701                           ;main.c: 164:             funciona=0;
   702  000220  0E00               	movlw	0
   703  000222  6E2B               	movwf	_funciona^0,c	;volatile
   704  000224                     
   705                           ;main.c: 165:             valor=(entrega[1]-'0')*10000+(entrega[2]-'0')*1000+(entrega[3]
      +                          -'0')*100+(entrega[4]-'0')*10+(entrega[5]-'0')*1;
   706  000224  C01E  F00A         	movff	_entrega+1,___wmul@multiplier	;volatile
   707  000228  6A0B               	clrf	(___wmul@multiplier+1)^0,c
   708  00022A  0E27               	movlw	39
   709  00022C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
   710  00022E  0E10               	movlw	16
   711  000230  6E0C               	movwf	___wmul@multiplicand^0,c
   712  000232  ECE9  F005         	call	___wmul	;wreg free
   713  000236  5020               	movf	(_entrega+3)^0,w,c	;volatile
   714  000238  0D64               	mullw	100
   715  00023A  CFF3 F012          	movff	prodl,??_main
   716  00023E  CFF4 F013          	movff	prodh,??_main+1
   717  000242  5021               	movf	(_entrega+4)^0,w,c	;volatile
   718  000244  0D0A               	mullw	10
   719  000246  50F3               	movf	243,w,c
   720  000248  2612               	addwf	??_main^0,f,c
   721  00024A  50F4               	movf	244,w,c
   722  00024C  2213               	addwfc	(??_main+1)^0,f,c
   723  00024E  500A               	movf	?___wmul^0,w,c
   724  000250  2612               	addwf	??_main^0,f,c
   725  000252  500B               	movf	(?___wmul+1)^0,w,c
   726  000254  2213               	addwfc	(??_main+1)^0,f,c
   727  000256  C01F  F00A         	movff	_entrega+2,___wmul@multiplier	;volatile
   728  00025A  6A0B               	clrf	(___wmul@multiplier+1)^0,c
   729  00025C  0E03               	movlw	3
   730  00025E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
   731  000260  0EE8               	movlw	232
   732  000262  6E0C               	movwf	___wmul@multiplicand^0,c
   733  000264  ECE9  F005         	call	___wmul	;wreg free
   734  000268  500A               	movf	?___wmul^0,w,c
   735  00026A  2612               	addwf	??_main^0,f,c
   736  00026C  500B               	movf	(?___wmul+1)^0,w,c
   737  00026E  2213               	addwfc	(??_main+1)^0,f,c
   738  000270  5022               	movf	(_entrega+5)^0,w,c	;volatile
   739  000272  2612               	addwf	??_main^0,f,c
   740  000274  0E00               	movlw	0
   741  000276  2213               	addwfc	(??_main+1)^0,f,c
   742  000278  0EB0               	movlw	176
   743  00027A  2412               	addwf	??_main^0,w,c
   744  00027C  6E1B               	movwf	main@valor^0,c	;volatile
   745  00027E  0EDC               	movlw	220
   746  000280  2013               	addwfc	(??_main+1)^0,w,c
   747  000282  6E1C               	movwf	(main@valor+1)^0,c	;volatile
   748  000284                     
   749                           ;main.c: 168:         if(valor>=50 && valor<=4096){
   750  000284  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   751  000286  EF4E  F001         	goto	u1011
   752  00028A  501C               	movf	(main@valor+1)^0,w,c	;volatile
   753  00028C  E109               	bnz	u1010
   754  00028E  0E32               	movlw	50
   755  000290  5C1B               	subwf	main@valor^0,w,c	;volatile
   756  000292  A0D8               	btfss	status,0,c
   757  000294  EF4E  F001         	goto	u1011
   758  000298  EF50  F001         	goto	u1010
   759  00029C                     u1011:
   760  00029C  EF6D  F001         	goto	l2316
   761  0002A0                     u1010:
   762  0002A0  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   763  0002A2  EF5D  F001         	goto	u1020
   764  0002A6  041B               	decf	main@valor^0,w,c	;volatile
   765  0002A8  0E10               	movlw	16
   766  0002AA  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   767  0002AC  B0D8               	btfsc	status,0,c
   768  0002AE  EF5B  F001         	goto	u1021
   769  0002B2  EF5D  F001         	goto	u1020
   770  0002B6                     u1021:
   771  0002B6  EF6D  F001         	goto	l2316
   772  0002BA                     u1020:
   773  0002BA                     
   774                           ;main.c: 169:             T6CON = 0xF0;
   775  0002BA  0EF0               	movlw	240
   776  0002BC  6EB1               	movwf	177,c	;volatile
   777  0002BE                     
   778                           ;main.c: 170:             cont_T6PR = valor/16;
   779  0002BE  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   780  0002C2  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   781  0002C6  0E00               	movlw	0
   782  0002C8  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   783  0002CA  0E10               	movlw	16
   784  0002CC  6E0C               	movwf	___awdiv@divisor^0,c
   785  0002CE  EC35  F003         	call	___awdiv	;wreg free
   786  0002D2  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   787  0002D6  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   788  0002DA                     l2316:
   789                           
   790                           ;main.c: 172:         if(valor>=4097 && valor<=8193){
   791  0002DA  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   792  0002DC  EF78  F001         	goto	u1031
   793  0002E0  041B               	decf	main@valor^0,w,c	;volatile
   794  0002E2  0E10               	movlw	16
   795  0002E4  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   796  0002E6  A0D8               	btfss	status,0,c
   797  0002E8  EF78  F001         	goto	u1031
   798  0002EC  EF7A  F001         	goto	u1030
   799  0002F0                     u1031:
   800  0002F0  EF98  F001         	goto	l2324
   801  0002F4                     u1030:
   802  0002F4  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   803  0002F6  EF88  F001         	goto	u1040
   804  0002FA  0E02               	movlw	2
   805  0002FC  5C1B               	subwf	main@valor^0,w,c	;volatile
   806  0002FE  0E20               	movlw	32
   807  000300  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   808  000302  B0D8               	btfsc	status,0,c
   809  000304  EF86  F001         	goto	u1041
   810  000308  EF88  F001         	goto	u1040
   811  00030C                     u1041:
   812  00030C  EF98  F001         	goto	l2324
   813  000310                     u1040:
   814  000310                     
   815                           ;main.c: 173:             T6CON = 0xF1;
   816  000310  0EF1               	movlw	241
   817  000312  6EB1               	movwf	177,c	;volatile
   818  000314                     
   819                           ;main.c: 174:             cont_T6PR = valor/32;
   820  000314  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   821  000318  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   822  00031C  0E00               	movlw	0
   823  00031E  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   824  000320  0E20               	movlw	32
   825  000322  6E0C               	movwf	___awdiv@divisor^0,c
   826  000324  EC35  F003         	call	___awdiv	;wreg free
   827  000328  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   828  00032C  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   829  000330                     l2324:
   830                           
   831                           ;main.c: 176:         if(valor>=4098 && valor<=12288){
   832  000330  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   833  000332  EFA4  F001         	goto	u1051
   834  000336  0E02               	movlw	2
   835  000338  5C1B               	subwf	main@valor^0,w,c	;volatile
   836  00033A  0E10               	movlw	16
   837  00033C  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   838  00033E  A0D8               	btfss	status,0,c
   839  000340  EFA4  F001         	goto	u1051
   840  000344  EFA6  F001         	goto	u1050
   841  000348                     u1051:
   842  000348  EFC3  F001         	goto	l2332
   843  00034C                     u1050:
   844  00034C  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   845  00034E  EFB3  F001         	goto	u1060
   846  000352  041B               	decf	main@valor^0,w,c	;volatile
   847  000354  0E30               	movlw	48
   848  000356  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   849  000358  B0D8               	btfsc	status,0,c
   850  00035A  EFB1  F001         	goto	u1061
   851  00035E  EFB3  F001         	goto	u1060
   852  000362                     u1061:
   853  000362  EFC3  F001         	goto	l2332
   854  000366                     u1060:
   855  000366                     
   856                           ;main.c: 177:             T6CON = 0xF2;
   857  000366  0EF2               	movlw	242
   858  000368  6EB1               	movwf	177,c	;volatile
   859  00036A                     
   860                           ;main.c: 178:             cont_T6PR = valor/48;
   861  00036A  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   862  00036E  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   863  000372  0E00               	movlw	0
   864  000374  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   865  000376  0E30               	movlw	48
   866  000378  6E0C               	movwf	___awdiv@divisor^0,c
   867  00037A  EC35  F003         	call	___awdiv	;wreg free
   868  00037E  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   869  000382  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   870  000386                     l2332:
   871                           
   872                           ;main.c: 180:         if(valor>=4099 && valor<=16384){
   873  000386  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   874  000388  EFCF  F001         	goto	u1071
   875  00038C  0E03               	movlw	3
   876  00038E  5C1B               	subwf	main@valor^0,w,c	;volatile
   877  000390  0E10               	movlw	16
   878  000392  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   879  000394  A0D8               	btfss	status,0,c
   880  000396  EFCF  F001         	goto	u1071
   881  00039A  EFD1  F001         	goto	u1070
   882  00039E                     u1071:
   883  00039E  EFEE  F001         	goto	l2340
   884  0003A2                     u1070:
   885  0003A2  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   886  0003A4  EFDE  F001         	goto	u1080
   887  0003A8  041B               	decf	main@valor^0,w,c	;volatile
   888  0003AA  0E40               	movlw	64
   889  0003AC  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   890  0003AE  B0D8               	btfsc	status,0,c
   891  0003B0  EFDC  F001         	goto	u1081
   892  0003B4  EFDE  F001         	goto	u1080
   893  0003B8                     u1081:
   894  0003B8  EFEE  F001         	goto	l2340
   895  0003BC                     u1080:
   896  0003BC                     
   897                           ;main.c: 181:             T6CON = 0xF3;
   898  0003BC  0EF3               	movlw	243
   899  0003BE  6EB1               	movwf	177,c	;volatile
   900  0003C0                     
   901                           ;main.c: 182:             cont_T6PR = valor/64;
   902  0003C0  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   903  0003C4  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   904  0003C8  0E00               	movlw	0
   905  0003CA  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   906  0003CC  0E40               	movlw	64
   907  0003CE  6E0C               	movwf	___awdiv@divisor^0,c
   908  0003D0  EC35  F003         	call	___awdiv	;wreg free
   909  0003D4  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   910  0003D8  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   911  0003DC                     l2340:
   912                           
   913                           ;main.c: 184:         if(valor>=4100 && valor<=20480){
   914  0003DC  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   915  0003DE  EFFA  F001         	goto	u1091
   916  0003E2  0E04               	movlw	4
   917  0003E4  5C1B               	subwf	main@valor^0,w,c	;volatile
   918  0003E6  0E10               	movlw	16
   919  0003E8  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   920  0003EA  A0D8               	btfss	status,0,c
   921  0003EC  EFFA  F001         	goto	u1091
   922  0003F0  EFFC  F001         	goto	u1090
   923  0003F4                     u1091:
   924  0003F4  EF19  F002         	goto	l2348
   925  0003F8                     u1090:
   926  0003F8  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   927  0003FA  EF09  F002         	goto	u1100
   928  0003FE  041B               	decf	main@valor^0,w,c	;volatile
   929  000400  0E50               	movlw	80
   930  000402  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   931  000404  B0D8               	btfsc	status,0,c
   932  000406  EF07  F002         	goto	u1101
   933  00040A  EF09  F002         	goto	u1100
   934  00040E                     u1101:
   935  00040E  EF19  F002         	goto	l2348
   936  000412                     u1100:
   937  000412                     
   938                           ;main.c: 185:             T6CON = 0xF4;
   939  000412  0EF4               	movlw	244
   940  000414  6EB1               	movwf	177,c	;volatile
   941  000416                     
   942                           ;main.c: 186:             cont_T6PR = valor/80;
   943  000416  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   944  00041A  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   945  00041E  0E00               	movlw	0
   946  000420  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   947  000422  0E50               	movlw	80
   948  000424  6E0C               	movwf	___awdiv@divisor^0,c
   949  000426  EC35  F003         	call	___awdiv	;wreg free
   950  00042A  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   951  00042E  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   952  000432                     l2348:
   953                           
   954                           ;main.c: 188:         if(valor>=20481 && valor<=24576){
   955  000432  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   956  000434  EF24  F002         	goto	u1111
   957  000438  041B               	decf	main@valor^0,w,c	;volatile
   958  00043A  0E50               	movlw	80
   959  00043C  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   960  00043E  A0D8               	btfss	status,0,c
   961  000440  EF24  F002         	goto	u1111
   962  000444  EF26  F002         	goto	u1110
   963  000448                     u1111:
   964  000448  EF43  F002         	goto	l2356
   965  00044C                     u1110:
   966  00044C  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   967  00044E  EF33  F002         	goto	u1120
   968  000452  041B               	decf	main@valor^0,w,c	;volatile
   969  000454  0E60               	movlw	96
   970  000456  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
   971  000458  B0D8               	btfsc	status,0,c
   972  00045A  EF31  F002         	goto	u1121
   973  00045E  EF33  F002         	goto	u1120
   974  000462                     u1121:
   975  000462  EF43  F002         	goto	l2356
   976  000466                     u1120:
   977  000466                     
   978                           ;main.c: 189:             T6CON = 0xF5;
   979  000466  0EF5               	movlw	245
   980  000468  6EB1               	movwf	177,c	;volatile
   981  00046A                     
   982                           ;main.c: 190:             cont_T6PR = valor/96;
   983  00046A  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
   984  00046E  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
   985  000472  0E00               	movlw	0
   986  000474  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   987  000476  0E60               	movlw	96
   988  000478  6E0C               	movwf	___awdiv@divisor^0,c
   989  00047A  EC35  F003         	call	___awdiv	;wreg free
   990  00047E  C00A  F014         	movff	?___awdiv,main@cont_T6PR
   991  000482  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
   992  000486                     l2356:
   993                           
   994                           ;main.c: 192:         if(valor>=24577 && valor<=28672){
   995  000486  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
   996  000488  EF4E  F002         	goto	u1131
   997  00048C  041B               	decf	main@valor^0,w,c	;volatile
   998  00048E  0E60               	movlw	96
   999  000490  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
  1000  000492  A0D8               	btfss	status,0,c
  1001  000494  EF4E  F002         	goto	u1131
  1002  000498  EF50  F002         	goto	u1130
  1003  00049C                     u1131:
  1004  00049C  EF6D  F002         	goto	l2364
  1005  0004A0                     u1130:
  1006  0004A0  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
  1007  0004A2  EF5D  F002         	goto	u1140
  1008  0004A6  041B               	decf	main@valor^0,w,c	;volatile
  1009  0004A8  0E70               	movlw	112
  1010  0004AA  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
  1011  0004AC  B0D8               	btfsc	status,0,c
  1012  0004AE  EF5B  F002         	goto	u1141
  1013  0004B2  EF5D  F002         	goto	u1140
  1014  0004B6                     u1141:
  1015  0004B6  EF6D  F002         	goto	l2364
  1016  0004BA                     u1140:
  1017  0004BA                     
  1018                           ;main.c: 193:             T6CON = 0xF6;
  1019  0004BA  0EF6               	movlw	246
  1020  0004BC  6EB1               	movwf	177,c	;volatile
  1021  0004BE                     
  1022                           ;main.c: 194:             cont_T6PR = valor/112;
  1023  0004BE  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
  1024  0004C2  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
  1025  0004C6  0E00               	movlw	0
  1026  0004C8  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1027  0004CA  0E70               	movlw	112
  1028  0004CC  6E0C               	movwf	___awdiv@divisor^0,c
  1029  0004CE  EC35  F003         	call	___awdiv	;wreg free
  1030  0004D2  C00A  F014         	movff	?___awdiv,main@cont_T6PR
  1031  0004D6  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
  1032  0004DA                     l2364:
  1033                           
  1034                           ;main.c: 196:         if(valor>=28673 && valor<=32768){
  1035  0004DA  BE1C               	btfsc	(main@valor+1)^0,7,c	;volatile
  1036  0004DC  EF78  F002         	goto	u1151
  1037  0004E0  041B               	decf	main@valor^0,w,c	;volatile
  1038  0004E2  0E70               	movlw	112
  1039  0004E4  581C               	subwfb	(main@valor+1)^0,w,c	;volatile
  1040  0004E6  A0D8               	btfss	status,0,c
  1041  0004E8  EF78  F002         	goto	u1151
  1042  0004EC  EF7A  F002         	goto	u1150
  1043  0004F0                     u1151:
  1044  0004F0  EF8B  F002         	goto	l2392
  1045  0004F4                     u1150:
  1046  0004F4                     
  1047                           ;main.c: 197:             T6CON = 0xF7;
  1048  0004F4  0EF7               	movlw	247
  1049  0004F6  6EB1               	movwf	177,c	;volatile
  1050  0004F8                     
  1051                           ;main.c: 198:             cont_T6PR = valor/128;
  1052  0004F8  C01B  F00A         	movff	main@valor,___awdiv@dividend	;volatile
  1053  0004FC  C01C  F00B         	movff	main@valor+1,___awdiv@dividend+1	;volatile
  1054  000500  0E00               	movlw	0
  1055  000502  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1056  000504  0E80               	movlw	128
  1057  000506  6E0C               	movwf	___awdiv@divisor^0,c
  1058  000508  EC35  F003         	call	___awdiv	;wreg free
  1059  00050C  C00A  F014         	movff	?___awdiv,main@cont_T6PR
  1060  000510  C00B  F015         	movff	?___awdiv+1,main@cont_T6PR+1
  1061  000514  8286               	bsf	134,1,c	;volatile
  1062  000516                     l2392:
  1063                           
  1064                           ;main.c: 221:             T6PR=cont_T6PR;
  1065  000516  C014  FFB0         	movff	main@cont_T6PR,4016	;volatile
  1066  00051A                     l2394:
  1067                           
  1068                           ;main.c: 226:         if(TengoADC==1){
  1069  00051A  0428               	decf	_TengoADC^0,w,c	;volatile
  1070  00051C  A4D8               	btfss	status,2,c
  1071  00051E  EF93  F002         	goto	u1161
  1072  000522  EF95  F002         	goto	u1160
  1073  000526                     u1161:
  1074  000526  EF0D  F003         	goto	l2418
  1075  00052A                     u1160:
  1076  00052A                     
  1077                           ;main.c: 229:             TengoADC=0;
  1078  00052A  0E00               	movlw	0
  1079  00052C  6E28               	movwf	_TengoADC^0,c	;volatile
  1080  00052E                     
  1081                           ;main.c: 230:             pack[4]= (adc%10);
  1082  00052E  C024  F00A         	movff	_adc,___lwmod@dividend	;volatile
  1083  000532  C025  F00B         	movff	_adc+1,___lwmod@dividend+1	;volatile
  1084  000536  0E00               	movlw	0
  1085  000538  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  1086  00053A  0E0A               	movlw	10
  1087  00053C  6E0C               	movwf	___lwmod@divisor^0,c
  1088  00053E  ECAE  F004         	call	___lwmod	;wreg free
  1089  000542  500A               	movf	?___lwmod^0,w,c
  1090  000544  6E1A               	movwf	(main@pack+4)^0,c	;volatile
  1091  000546                     
  1092                           ;main.c: 231:             adc=(adc/10);
  1093  000546  C024  F00A         	movff	_adc,___lwdiv@dividend	;volatile
  1094  00054A  C025  F00B         	movff	_adc+1,___lwdiv@dividend+1	;volatile
  1095  00054E  0E00               	movlw	0
  1096  000550  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1097  000552  0E0A               	movlw	10
  1098  000554  6E0C               	movwf	___lwdiv@divisor^0,c
  1099  000556  EC74  F004         	call	___lwdiv	;wreg free
  1100  00055A  C00A  F024         	movff	?___lwdiv,_adc	;volatile
  1101  00055E  C00B  F025         	movff	?___lwdiv+1,_adc+1	;volatile
  1102  000562                     
  1103                           ;main.c: 232:             pack[3]= (adc%10);
  1104  000562  C024  F00A         	movff	_adc,___lwmod@dividend	;volatile
  1105  000566  C025  F00B         	movff	_adc+1,___lwmod@dividend+1	;volatile
  1106  00056A  0E00               	movlw	0
  1107  00056C  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  1108  00056E  0E0A               	movlw	10
  1109  000570  6E0C               	movwf	___lwmod@divisor^0,c
  1110  000572  ECAE  F004         	call	___lwmod	;wreg free
  1111  000576  500A               	movf	?___lwmod^0,w,c
  1112  000578  6E19               	movwf	(main@pack+3)^0,c	;volatile
  1113  00057A                     
  1114                           ;main.c: 233:             adc=(adc/10);
  1115  00057A  C024  F00A         	movff	_adc,___lwdiv@dividend	;volatile
  1116  00057E  C025  F00B         	movff	_adc+1,___lwdiv@dividend+1	;volatile
  1117  000582  0E00               	movlw	0
  1118  000584  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1119  000586  0E0A               	movlw	10
  1120  000588  6E0C               	movwf	___lwdiv@divisor^0,c
  1121  00058A  EC74  F004         	call	___lwdiv	;wreg free
  1122  00058E  C00A  F024         	movff	?___lwdiv,_adc	;volatile
  1123  000592  C00B  F025         	movff	?___lwdiv+1,_adc+1	;volatile
  1124  000596                     
  1125                           ;main.c: 234:             pack[2] = (adc%10);
  1126  000596  C024  F00A         	movff	_adc,___lwmod@dividend	;volatile
  1127  00059A  C025  F00B         	movff	_adc+1,___lwmod@dividend+1	;volatile
  1128  00059E  0E00               	movlw	0
  1129  0005A0  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  1130  0005A2  0E0A               	movlw	10
  1131  0005A4  6E0C               	movwf	___lwmod@divisor^0,c
  1132  0005A6  ECAE  F004         	call	___lwmod	;wreg free
  1133  0005AA  500A               	movf	?___lwmod^0,w,c
  1134  0005AC  6E18               	movwf	(main@pack+2)^0,c	;volatile
  1135  0005AE                     
  1136                           ;main.c: 235:             adc=(adc/10);
  1137  0005AE  C024  F00A         	movff	_adc,___lwdiv@dividend	;volatile
  1138  0005B2  C025  F00B         	movff	_adc+1,___lwdiv@dividend+1	;volatile
  1139  0005B6  0E00               	movlw	0
  1140  0005B8  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1141  0005BA  0E0A               	movlw	10
  1142  0005BC  6E0C               	movwf	___lwdiv@divisor^0,c
  1143  0005BE  EC74  F004         	call	___lwdiv	;wreg free
  1144  0005C2  C00A  F024         	movff	?___lwdiv,_adc	;volatile
  1145  0005C6  C00B  F025         	movff	?___lwdiv+1,_adc+1	;volatile
  1146  0005CA                     
  1147                           ;main.c: 236:             pack[1]=(adc%10);
  1148  0005CA  C024  F00A         	movff	_adc,___lwmod@dividend	;volatile
  1149  0005CE  C025  F00B         	movff	_adc+1,___lwmod@dividend+1	;volatile
  1150  0005D2  0E00               	movlw	0
  1151  0005D4  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  1152  0005D6  0E0A               	movlw	10
  1153  0005D8  6E0C               	movwf	___lwmod@divisor^0,c
  1154  0005DA  ECAE  F004         	call	___lwmod	;wreg free
  1155  0005DE  500A               	movf	?___lwmod^0,w,c
  1156  0005E0  6E17               	movwf	(main@pack+1)^0,c	;volatile
  1157  0005E2                     
  1158                           ;main.c: 237:             adc=(adc/10);
  1159  0005E2  C024  F00A         	movff	_adc,___lwdiv@dividend	;volatile
  1160  0005E6  C025  F00B         	movff	_adc+1,___lwdiv@dividend+1	;volatile
  1161  0005EA  0E00               	movlw	0
  1162  0005EC  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1163  0005EE  0E0A               	movlw	10
  1164  0005F0  6E0C               	movwf	___lwdiv@divisor^0,c
  1165  0005F2  EC74  F004         	call	___lwdiv	;wreg free
  1166  0005F6  C00A  F024         	movff	?___lwdiv,_adc	;volatile
  1167  0005FA  C00B  F025         	movff	?___lwdiv+1,_adc+1	;volatile
  1168  0005FE                     
  1169                           ;main.c: 238:             pack[0]=(adc%10);
  1170  0005FE  C024  F00A         	movff	_adc,___lwmod@dividend	;volatile
  1171  000602  C025  F00B         	movff	_adc+1,___lwmod@dividend+1	;volatile
  1172  000606  0E00               	movlw	0
  1173  000608  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  1174  00060A  0E0A               	movlw	10
  1175  00060C  6E0C               	movwf	___lwmod@divisor^0,c
  1176  00060E  ECAE  F004         	call	___lwmod	;wreg free
  1177  000612  500A               	movf	?___lwmod^0,w,c
  1178  000614  6E16               	movwf	main@pack^0,c	;volatile
  1179  000616                     
  1180                           ;main.c: 240:             bandera=1;
  1181  000616  0E01               	movlw	1
  1182  000618  6E29               	movwf	_bandera^0,c	;volatile
  1183  00061A                     l2418:
  1184                           
  1185                           ;main.c: 244:         if(bandera==1){
  1186  00061A  0429               	decf	_bandera^0,w,c	;volatile
  1187  00061C  A4D8               	btfss	status,2,c
  1188  00061E  EF13  F003         	goto	u1171
  1189  000622  EF15  F003         	goto	u1170
  1190  000626                     u1171:
  1191  000626  EF79  F000         	goto	l2258
  1192  00062A                     u1170:
  1193  00062A                     
  1194                           ;main.c: 246:             EUSART1_Write(pack[0] +'0');
  1195  00062A  5016               	movf	main@pack^0,w,c
  1196  00062C  0F30               	addlw	48
  1197  00062E  EC11  F005         	call	_EUSART1_Write
  1198                           
  1199                           ;main.c: 247:             EUSART1_Write(pack[1] +'0');
  1200  000632  5017               	movf	(main@pack+1)^0,w,c	;volatile
  1201  000634  0F30               	addlw	48
  1202  000636  EC11  F005         	call	_EUSART1_Write
  1203                           
  1204                           ;main.c: 248:             EUSART1_Write(pack[2] +'0');
  1205  00063A  5018               	movf	(main@pack+2)^0,w,c	;volatile
  1206  00063C  0F30               	addlw	48
  1207  00063E  EC11  F005         	call	_EUSART1_Write
  1208                           
  1209                           ;main.c: 249:             EUSART1_Write(pack[3] +'0');
  1210  000642  5019               	movf	(main@pack+3)^0,w,c	;volatile
  1211  000644  0F30               	addlw	48
  1212  000646  EC11  F005         	call	_EUSART1_Write
  1213                           
  1214                           ;main.c: 250:             EUSART1_Write(pack[4] +'0');
  1215  00064A  501A               	movf	(main@pack+4)^0,w,c	;volatile
  1216  00064C  0F30               	addlw	48
  1217  00064E  EC11  F005         	call	_EUSART1_Write
  1218                           
  1219                           ;main.c: 251:             EUSART1_Write(0x0D);
  1220  000652  0E0D               	movlw	13
  1221  000654  EC11  F005         	call	_EUSART1_Write
  1222                           
  1223                           ;main.c: 252:             EUSART1_Write('\n');
  1224  000658  0E0A               	movlw	10
  1225  00065A  EC11  F005         	call	_EUSART1_Write
  1226  00065E                     
  1227                           ;main.c: 253:             bandera=0;
  1228  00065E  0E00               	movlw	0
  1229  000660  6E29               	movwf	_bandera^0,c	;volatile
  1230  000662  EF79  F000         	goto	l2258
  1231  000666  EF6B  F000         	goto	start
  1232  00066A                     __end_of_main:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function ___wmul *****************
  1236 ;; Defined at:
  1237 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  multiplier      2    9[COMRAM] unsigned int 
  1240 ;;  multiplicand    2   11[COMRAM] unsigned int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  product         2   13[COMRAM] unsigned int 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  2    9[COMRAM] unsigned int 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0, prodl, prodh
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;Total ram usage:        6 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    4
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text1
  1267  000BD2                     __ptext1:
  1268                           	callstack 0
  1269  000BD2                     ___wmul:
  1270                           	callstack 26
  1271  000BD2  500A               	movf	___wmul@multiplier^0,w,c
  1272  000BD4  020C               	mulwf	___wmul@multiplicand^0,c
  1273  000BD6  CFF3 F00E          	movff	prodl,___wmul@product
  1274  000BDA  CFF4 F00F          	movff	prodh,___wmul@product+1
  1275  000BDE  500A               	movf	___wmul@multiplier^0,w,c
  1276  000BE0  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  1277  000BE2  50F3               	movf	243,w,c
  1278  000BE4  260F               	addwf	(___wmul@product+1)^0,f,c
  1279  000BE6  500B               	movf	(___wmul@multiplier+1)^0,w,c
  1280  000BE8  020C               	mulwf	___wmul@multiplicand^0,c
  1281  000BEA  50F3               	movf	243,w,c
  1282  000BEC  260F               	addwf	(___wmul@product+1)^0,f,c
  1283  000BEE  C00E  F00A         	movff	___wmul@product,?___wmul
  1284  000BF2  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  1285  000BF6  0012               	return		;funcret
  1286  000BF8                     __end_of___wmul:
  1287                           	callstack 0
  1288                           
  1289 ;; *************** function ___lwmod *****************
  1290 ;; Defined at:
  1291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  dividend        2    9[COMRAM] unsigned int 
  1294 ;;  divisor         2   11[COMRAM] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  counter         1   13[COMRAM] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2    9[COMRAM] unsigned int 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;Total ram usage:        5 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    4
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text2
  1321  00095C                     __ptext2:
  1322                           	callstack 0
  1323  00095C                     ___lwmod:
  1324                           	callstack 26
  1325  00095C  500C               	movf	___lwmod@divisor^0,w,c
  1326  00095E  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  1327  000960  B4D8               	btfsc	status,2,c
  1328  000962  EFB5  F004         	goto	u941
  1329  000966  EFB7  F004         	goto	u940
  1330  00096A                     u941:
  1331  00096A  EFDB  F004         	goto	l1162
  1332  00096E                     u940:
  1333  00096E  0E01               	movlw	1
  1334  000970  6E0E               	movwf	___lwmod@counter^0,c
  1335  000972  EFBF  F004         	goto	l2242
  1336  000976                     l2240:
  1337  000976  90D8               	bcf	status,0,c
  1338  000978  360C               	rlcf	___lwmod@divisor^0,f,c
  1339  00097A  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  1340  00097C  2A0E               	incf	___lwmod@counter^0,f,c
  1341  00097E                     l2242:
  1342  00097E  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  1343  000980  EFC4  F004         	goto	u951
  1344  000984  EFC6  F004         	goto	u950
  1345  000988                     u951:
  1346  000988  EFBB  F004         	goto	l2240
  1347  00098C                     u950:
  1348  00098C                     l2244:
  1349  00098C  500C               	movf	___lwmod@divisor^0,w,c
  1350  00098E  5C0A               	subwf	___lwmod@dividend^0,w,c
  1351  000990  500D               	movf	(___lwmod@divisor+1)^0,w,c
  1352  000992  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  1353  000994  A0D8               	btfss	status,0,c
  1354  000996  EFCF  F004         	goto	u961
  1355  00099A  EFD1  F004         	goto	u960
  1356  00099E                     u961:
  1357  00099E  EFD5  F004         	goto	l2248
  1358  0009A2                     u960:
  1359  0009A2  500C               	movf	___lwmod@divisor^0,w,c
  1360  0009A4  5E0A               	subwf	___lwmod@dividend^0,f,c
  1361  0009A6  500D               	movf	(___lwmod@divisor+1)^0,w,c
  1362  0009A8  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  1363  0009AA                     l2248:
  1364  0009AA  90D8               	bcf	status,0,c
  1365  0009AC  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  1366  0009AE  320C               	rrcf	___lwmod@divisor^0,f,c
  1367  0009B0  2E0E               	decfsz	___lwmod@counter^0,f,c
  1368  0009B2  EFC6  F004         	goto	l2244
  1369  0009B6                     l1162:
  1370  0009B6  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  1371  0009BA  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  1372  0009BE  0012               	return		;funcret
  1373  0009C0                     __end_of___lwmod:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function ___lwdiv *****************
  1377 ;; Defined at:
  1378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  dividend        2    9[COMRAM] unsigned int 
  1381 ;;  divisor         2   11[COMRAM] unsigned int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  quotient        2   13[COMRAM] unsigned int 
  1384 ;;  counter         1   15[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2    9[COMRAM] unsigned int 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;Total ram usage:        7 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    4
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409  0008E8                     __ptext3:
  1410                           	callstack 0
  1411  0008E8                     ___lwdiv:
  1412                           	callstack 26
  1413  0008E8  0E00               	movlw	0
  1414  0008EA  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  1415  0008EC  0E00               	movlw	0
  1416  0008EE  6E0E               	movwf	___lwdiv@quotient^0,c
  1417  0008F0  500C               	movf	___lwdiv@divisor^0,w,c
  1418  0008F2  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1419  0008F4  B4D8               	btfsc	status,2,c
  1420  0008F6  EF7F  F004         	goto	u911
  1421  0008FA  EF81  F004         	goto	u910
  1422  0008FE                     u911:
  1423  0008FE  EFA9  F004         	goto	l1152
  1424  000902                     u910:
  1425  000902  0E01               	movlw	1
  1426  000904  6E10               	movwf	___lwdiv@counter^0,c
  1427  000906  EF89  F004         	goto	l2222
  1428  00090A                     l2220:
  1429  00090A  90D8               	bcf	status,0,c
  1430  00090C  360C               	rlcf	___lwdiv@divisor^0,f,c
  1431  00090E  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1432  000910  2A10               	incf	___lwdiv@counter^0,f,c
  1433  000912                     l2222:
  1434  000912  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  1435  000914  EF8E  F004         	goto	u921
  1436  000918  EF90  F004         	goto	u920
  1437  00091C                     u921:
  1438  00091C  EF85  F004         	goto	l2220
  1439  000920                     u920:
  1440  000920                     l2224:
  1441  000920  90D8               	bcf	status,0,c
  1442  000922  360E               	rlcf	___lwdiv@quotient^0,f,c
  1443  000924  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1444  000926  500C               	movf	___lwdiv@divisor^0,w,c
  1445  000928  5C0A               	subwf	___lwdiv@dividend^0,w,c
  1446  00092A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  1447  00092C  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1448  00092E  A0D8               	btfss	status,0,c
  1449  000930  EF9C  F004         	goto	u931
  1450  000934  EF9E  F004         	goto	u930
  1451  000938                     u931:
  1452  000938  EFA3  F004         	goto	l2232
  1453  00093C                     u930:
  1454  00093C  500C               	movf	___lwdiv@divisor^0,w,c
  1455  00093E  5E0A               	subwf	___lwdiv@dividend^0,f,c
  1456  000940  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  1457  000942  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1458  000944  800E               	bsf	___lwdiv@quotient^0,0,c
  1459  000946                     l2232:
  1460  000946  90D8               	bcf	status,0,c
  1461  000948  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1462  00094A  320C               	rrcf	___lwdiv@divisor^0,f,c
  1463  00094C  2E10               	decfsz	___lwdiv@counter^0,f,c
  1464  00094E  EF90  F004         	goto	l2224
  1465  000952                     l1152:
  1466  000952  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  1467  000956  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1468  00095A  0012               	return		;funcret
  1469  00095C                     __end_of___lwdiv:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function ___awdiv *****************
  1473 ;; Defined at:
  1474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  dividend        2    9[COMRAM] int 
  1477 ;;  divisor         2   11[COMRAM] int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  quotient        2   15[COMRAM] int 
  1480 ;;  sign            1   14[COMRAM] unsigned char 
  1481 ;;  counter         1   13[COMRAM] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2    9[COMRAM] int 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;Total ram usage:        8 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    4
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text4
  1506  00066A                     __ptext4:
  1507                           	callstack 0
  1508  00066A                     ___awdiv:
  1509                           	callstack 26
  1510  00066A  0E00               	movlw	0
  1511  00066C  6E0F               	movwf	___awdiv@sign^0,c
  1512  00066E  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  1513  000670  EF3E  F003         	goto	u850
  1514  000674  EF3C  F003         	goto	u851
  1515  000678                     u851:
  1516  000678  EF44  F003         	goto	l2178
  1517  00067C                     u850:
  1518  00067C  6C0C               	negf	___awdiv@divisor^0,c
  1519  00067E  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  1520  000680  B0D8               	btfsc	status,0,c
  1521  000682  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  1522  000684  0E01               	movlw	1
  1523  000686  6E0F               	movwf	___awdiv@sign^0,c
  1524  000688                     l2178:
  1525  000688  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  1526  00068A  EF4B  F003         	goto	u860
  1527  00068E  EF49  F003         	goto	u861
  1528  000692                     u861:
  1529  000692  EF51  F003         	goto	l2184
  1530  000696                     u860:
  1531  000696  6C0A               	negf	___awdiv@dividend^0,c
  1532  000698  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  1533  00069A  B0D8               	btfsc	status,0,c
  1534  00069C  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  1535  00069E  0E01               	movlw	1
  1536  0006A0  1A0F               	xorwf	___awdiv@sign^0,f,c
  1537  0006A2                     l2184:
  1538  0006A2  0E00               	movlw	0
  1539  0006A4  6E11               	movwf	(___awdiv@quotient+1)^0,c
  1540  0006A6  0E00               	movlw	0
  1541  0006A8  6E10               	movwf	___awdiv@quotient^0,c
  1542  0006AA  500C               	movf	___awdiv@divisor^0,w,c
  1543  0006AC  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  1544  0006AE  B4D8               	btfsc	status,2,c
  1545  0006B0  EF5C  F003         	goto	u871
  1546  0006B4  EF5E  F003         	goto	u870
  1547  0006B8                     u871:
  1548  0006B8  EF86  F003         	goto	l2206
  1549  0006BC                     u870:
  1550  0006BC  0E01               	movlw	1
  1551  0006BE  6E0E               	movwf	___awdiv@counter^0,c
  1552  0006C0  EF66  F003         	goto	l2192
  1553  0006C4                     l2190:
  1554  0006C4  90D8               	bcf	status,0,c
  1555  0006C6  360C               	rlcf	___awdiv@divisor^0,f,c
  1556  0006C8  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  1557  0006CA  2A0E               	incf	___awdiv@counter^0,f,c
  1558  0006CC                     l2192:
  1559  0006CC  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  1560  0006CE  EF6B  F003         	goto	u881
  1561  0006D2  EF6D  F003         	goto	u880
  1562  0006D6                     u881:
  1563  0006D6  EF62  F003         	goto	l2190
  1564  0006DA                     u880:
  1565  0006DA                     l2194:
  1566  0006DA  90D8               	bcf	status,0,c
  1567  0006DC  3610               	rlcf	___awdiv@quotient^0,f,c
  1568  0006DE  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  1569  0006E0  500C               	movf	___awdiv@divisor^0,w,c
  1570  0006E2  5C0A               	subwf	___awdiv@dividend^0,w,c
  1571  0006E4  500D               	movf	(___awdiv@divisor+1)^0,w,c
  1572  0006E6  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  1573  0006E8  A0D8               	btfss	status,0,c
  1574  0006EA  EF79  F003         	goto	u891
  1575  0006EE  EF7B  F003         	goto	u890
  1576  0006F2                     u891:
  1577  0006F2  EF80  F003         	goto	l2202
  1578  0006F6                     u890:
  1579  0006F6  500C               	movf	___awdiv@divisor^0,w,c
  1580  0006F8  5E0A               	subwf	___awdiv@dividend^0,f,c
  1581  0006FA  500D               	movf	(___awdiv@divisor+1)^0,w,c
  1582  0006FC  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  1583  0006FE  8010               	bsf	___awdiv@quotient^0,0,c
  1584  000700                     l2202:
  1585  000700  90D8               	bcf	status,0,c
  1586  000702  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  1587  000704  320C               	rrcf	___awdiv@divisor^0,f,c
  1588  000706  2E0E               	decfsz	___awdiv@counter^0,f,c
  1589  000708  EF6D  F003         	goto	l2194
  1590  00070C                     l2206:
  1591  00070C  500F               	movf	___awdiv@sign^0,w,c
  1592  00070E  B4D8               	btfsc	status,2,c
  1593  000710  EF8C  F003         	goto	u901
  1594  000714  EF8E  F003         	goto	u900
  1595  000718                     u901:
  1596  000718  EF92  F003         	goto	l2210
  1597  00071C                     u900:
  1598  00071C  6C10               	negf	___awdiv@quotient^0,c
  1599  00071E  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  1600  000720  B0D8               	btfsc	status,0,c
  1601  000722  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  1602  000724                     l2210:
  1603  000724  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  1604  000728  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  1605  00072C  0012               	return		;funcret
  1606  00072E                     __end_of___awdiv:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _SYSTEM_Initialize *****************
  1610 ;; Defined at:
  1611 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    6
  1632 ;; This function calls:
  1633 ;;		_ADCC_Initialize
  1634 ;;		_EUSART1_Initialize
  1635 ;;		_INTERRUPT_Initialize
  1636 ;;		_OSCILLATOR_Initialize
  1637 ;;		_PIN_MANAGER_Initialize
  1638 ;;		_PMD_Initialize
  1639 ;;		_TMR6_Initialize
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text5
  1646  000BF8                     __ptext5:
  1647                           	callstack 0
  1648  000BF8                     _SYSTEM_Initialize:
  1649                           	callstack 24
  1650  000BF8                     
  1651                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1652  000BF8  EC6C  F006         	call	_INTERRUPT_Initialize	;wreg free
  1653  000BFC                     
  1654                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1655  000BFC  EC19  F006         	call	_PMD_Initialize	;wreg free
  1656  000C00                     
  1657                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1658  000C00  ECF7  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1659  000C04                     
  1660                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1661  000C04  EC27  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1662  000C08                     
  1663                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  1664  000C08  ECE0  F004         	call	_ADCC_Initialize	;wreg free
  1665  000C0C                     
  1666                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  1667  000C0C  EC0B  F006         	call	_TMR6_Initialize	;wreg free
  1668  000C10                     
  1669                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  1670  000C10  EC37  F004         	call	_EUSART1_Initialize	;wreg free
  1671  000C14  0012               	return		;funcret
  1672  000C16                     __end_of_SYSTEM_Initialize:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _TMR6_Initialize *****************
  1676 ;; Defined at:
  1677 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    4
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_SYSTEM_Initialize
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text6
  1706  000C16                     __ptext6:
  1707                           	callstack 0
  1708  000C16                     _TMR6_Initialize:
  1709                           	callstack 25
  1710  000C16                     
  1711                           ;mcc_generated_files/tmr6.c: 67:     T6CLKCON = 0x03;
  1712  000C16  0E03               	movlw	3
  1713  000C18  6EB3               	movwf	179,c	;volatile
  1714                           
  1715                           ;mcc_generated_files/tmr6.c: 70:     T6HLT = 0x00;
  1716  000C1A  0E00               	movlw	0
  1717  000C1C  6EB2               	movwf	178,c	;volatile
  1718                           
  1719                           ;mcc_generated_files/tmr6.c: 73:     T6RST = 0x00;
  1720  000C1E  0E00               	movlw	0
  1721  000C20  6EB4               	movwf	180,c	;volatile
  1722                           
  1723                           ;mcc_generated_files/tmr6.c: 76:     T6PR = 0xC2;
  1724  000C22  0EC2               	movlw	194
  1725  000C24  6EB0               	movwf	176,c	;volatile
  1726                           
  1727                           ;mcc_generated_files/tmr6.c: 79:     T6TMR = 0x00;
  1728  000C26  0E00               	movlw	0
  1729  000C28  6EAF               	movwf	175,c	;volatile
  1730  000C2A                     
  1731                           ;mcc_generated_files/tmr6.c: 82:     PIR4bits.TMR6IF = 0;
  1732  000C2A  010E               	movlb	14	; () banked
  1733  000C2C  9BCE               	bcf	206,5,b	;volatile
  1734  000C2E                     
  1735                           ; BSR set to: 14
  1736                           ;mcc_generated_files/tmr6.c: 85:     T6CON = 0xFF;
  1737  000C2E  68B1               	setf	177,c	;volatile
  1738  000C30                     
  1739                           ; BSR set to: 14
  1740  000C30  0012               	return		;funcret
  1741  000C32                     __end_of_TMR6_Initialize:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _PMD_Initialize *****************
  1745 ;; Defined at:
  1746 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_SYSTEM_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text7
  1775  000C32                     __ptext7:
  1776                           	callstack 0
  1777  000C32                     _PMD_Initialize:
  1778                           	callstack 25
  1779  000C32                     
  1780                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  1781  000C32  0E00               	movlw	0
  1782  000C34  010E               	movlb	14	; () banked
  1783  000C36  6FE1               	movwf	225,b	;volatile
  1784                           
  1785                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  1786  000C38  0E00               	movlw	0
  1787  000C3A  6FE2               	movwf	226,b	;volatile
  1788                           
  1789                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  1790  000C3C  0E00               	movlw	0
  1791  000C3E  6FE3               	movwf	227,b	;volatile
  1792                           
  1793                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  1794  000C40  0E00               	movlw	0
  1795  000C42  6FE4               	movwf	228,b	;volatile
  1796                           
  1797                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  1798  000C44  0E00               	movlw	0
  1799  000C46  6FE5               	movwf	229,b	;volatile
  1800                           
  1801                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  1802  000C48  0E00               	movlw	0
  1803  000C4A  6FE6               	movwf	230,b	;volatile
  1804  000C4C                     
  1805                           ; BSR set to: 14
  1806  000C4C  0012               	return		;funcret
  1807  000C4E                     __end_of_PMD_Initialize:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _PIN_MANAGER_Initialize *****************
  1811 ;; Defined at:
  1812 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    4
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_SYSTEM_Initialize
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text8
  1841  0007EE                     __ptext8:
  1842                           	callstack 0
  1843  0007EE                     _PIN_MANAGER_Initialize:
  1844                           	callstack 25
  1845  0007EE                     
  1846                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1847  0007EE  0E00               	movlw	0
  1848  0007F0  6E87               	movwf	135,c	;volatile
  1849                           
  1850                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1851  0007F2  0E00               	movlw	0
  1852  0007F4  6E86               	movwf	134,c	;volatile
  1853                           
  1854                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1855  0007F6  0E00               	movlw	0
  1856  0007F8  6E83               	movwf	131,c	;volatile
  1857                           
  1858                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1859  0007FA  0E00               	movlw	0
  1860  0007FC  6E84               	movwf	132,c	;volatile
  1861                           
  1862                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1863  0007FE  0E00               	movlw	0
  1864  000800  6E85               	movwf	133,c	;volatile
  1865                           
  1866                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1867  000802  0E07               	movlw	7
  1868  000804  6E8C               	movwf	140,c	;volatile
  1869  000806                     
  1870                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1871  000806  6888               	setf	136,c	;volatile
  1872  000808                     
  1873                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1874  000808  6889               	setf	137,c	;volatile
  1875                           
  1876                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x7F;
  1877  00080A  0E7F               	movlw	127
  1878  00080C  6E8A               	movwf	138,c	;volatile
  1879                           
  1880                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xDC;
  1881  00080E  0EDC               	movlw	220
  1882  000810  6E8B               	movwf	139,c	;volatile
  1883  000812                     
  1884                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1885  000812  010F               	movlb	15	; () banked
  1886  000814  6926               	setf	38,b	;volatile
  1887                           
  1888                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xBF;
  1889  000816  0EBF               	movlw	191
  1890  000818  6F21               	movwf	33,b	;volatile
  1891  00081A                     
  1892                           ; BSR set to: 15
  1893                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  1894  00081A  6919               	setf	25,b	;volatile
  1895                           
  1896                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1897  00081C  0E07               	movlw	7
  1898  00081E  6F2E               	movwf	46,b	;volatile
  1899  000820                     
  1900                           ; BSR set to: 15
  1901                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1902  000820  6911               	setf	17,b	;volatile
  1903                           
  1904                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1905  000822  0E00               	movlw	0
  1906  000824  6F25               	movwf	37,b	;volatile
  1907                           
  1908                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1909  000826  0E00               	movlw	0
  1910  000828  6F2D               	movwf	45,b	;volatile
  1911                           
  1912                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1913  00082A  0E00               	movlw	0
  1914  00082C  6F18               	movwf	24,b	;volatile
  1915                           
  1916                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1917  00082E  0E00               	movlw	0
  1918  000830  6F10               	movwf	16,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1921  000832  0E00               	movlw	0
  1922  000834  6F20               	movwf	32,b	;volatile
  1923                           
  1924                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1925  000836  0E00               	movlw	0
  1926  000838  6F2C               	movwf	44,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1929  00083A  0E00               	movlw	0
  1930  00083C  6F0F               	movwf	15,b	;volatile
  1931                           
  1932                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1933  00083E  0E00               	movlw	0
  1934  000840  6F17               	movwf	23,b	;volatile
  1935                           
  1936                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1937  000842  0E00               	movlw	0
  1938  000844  6F1F               	movwf	31,b	;volatile
  1939                           
  1940                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1941  000846  0E00               	movlw	0
  1942  000848  6F24               	movwf	36,b	;volatile
  1943  00084A                     
  1944                           ; BSR set to: 15
  1945                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1946  00084A  690E               	setf	14,b	;volatile
  1947  00084C                     
  1948                           ; BSR set to: 15
  1949                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1950  00084C  6916               	setf	22,b	;volatile
  1951  00084E                     
  1952                           ; BSR set to: 15
  1953                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1954  00084E  691E               	setf	30,b	;volatile
  1955  000850                     
  1956                           ; BSR set to: 15
  1957                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1958  000850  6923               	setf	35,b	;volatile
  1959                           
  1960                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1961  000852  0E07               	movlw	7
  1962  000854  6F2B               	movwf	43,b	;volatile
  1963  000856                     
  1964                           ; BSR set to: 15
  1965                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1966  000856  690D               	setf	13,b	;volatile
  1967  000858                     
  1968                           ; BSR set to: 15
  1969                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1970  000858  6915               	setf	21,b	;volatile
  1971  00085A                     
  1972                           ; BSR set to: 15
  1973                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1974  00085A  691D               	setf	29,b	;volatile
  1975  00085C                     
  1976                           ; BSR set to: 15
  1977                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1978  00085C  6922               	setf	34,b	;volatile
  1979                           
  1980                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1981  00085E  0E0F               	movlw	15
  1982  000860  6F2A               	movwf	42,b	;volatile
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x16;
  1985  000862  0E16               	movlw	22
  1986  000864  010E               	movlb	14	; () banked
  1987  000866  6FB5               	movwf	181,b	;volatile
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 128:     RC7PPS = 0x09;
  1990  000868  0E09               	movlw	9
  1991  00086A  6FFE               	movwf	254,b	;volatile
  1992  00086C                     
  1993                           ; BSR set to: 14
  1994  00086C  0012               	return		;funcret
  1995  00086E                     __end_of_PIN_MANAGER_Initialize:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _OSCILLATOR_Initialize *****************
  1999 ;; Defined at:
  2000 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_SYSTEM_Initialize
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text9
  2029  000C4E                     __ptext9:
  2030                           	callstack 0
  2031  000C4E                     _OSCILLATOR_Initialize:
  2032                           	callstack 25
  2033  000C4E                     
  2034                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  2035  000C4E  0E60               	movlw	96
  2036  000C50  010E               	movlb	14	; () banked
  2037  000C52  6FD8               	movwf	216,b	;volatile
  2038                           
  2039                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  2040  000C54  0E00               	movlw	0
  2041  000C56  6FDA               	movwf	218,b	;volatile
  2042                           
  2043                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  2044  000C58  0E00               	movlw	0
  2045  000C5A  6FDC               	movwf	220,b	;volatile
  2046                           
  2047                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x03;
  2048  000C5C  0E03               	movlw	3
  2049  000C5E  6FDE               	movwf	222,b	;volatile
  2050                           
  2051                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  2052  000C60  0E00               	movlw	0
  2053  000C62  6FDD               	movwf	221,b	;volatile
  2054  000C64                     
  2055                           ; BSR set to: 14
  2056  000C64  0012               	return		;funcret
  2057  000C66                     __end_of_OSCILLATOR_Initialize:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _INTERRUPT_Initialize *****************
  2061 ;; Defined at:
  2062 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    4
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_SYSTEM_Initialize
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text10
  2091  000CD8                     __ptext10:
  2092                           	callstack 0
  2093  000CD8                     _INTERRUPT_Initialize:
  2094                           	callstack 25
  2095  000CD8                     
  2096                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2097  000CD8  9AF2               	bcf	242,5,c	;volatile
  2098  000CDA  0012               	return		;funcret
  2099  000CDC                     __end_of_INTERRUPT_Initialize:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _EUSART1_Initialize *****************
  2103 ;; Defined at:
  2104 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    5
  2125 ;; This function calls:
  2126 ;;		_EUSART1_SetErrorHandler
  2127 ;;		_EUSART1_SetFramingErrorHandler
  2128 ;;		_EUSART1_SetOverrunErrorHandler
  2129 ;;		_EUSART1_SetRxInterruptHandler
  2130 ;;		_EUSART1_SetTxInterruptHandler
  2131 ;; This function is called by:
  2132 ;;		_SYSTEM_Initialize
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text11
  2137  00086E                     __ptext11:
  2138                           	callstack 0
  2139  00086E                     _EUSART1_Initialize:
  2140                           	callstack 24
  2141  00086E                     
  2142                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2143  00086E  010E               	movlb	14	; () banked
  2144  000870  9BC5               	bcf	197,5,b	;volatile
  2145  000872                     
  2146                           ; BSR set to: 14
  2147                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2148  000872  0E2E               	movlw	low _EUSART1_Receive_ISR
  2149  000874  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2150  000876  0E07               	movlw	high _EUSART1_Receive_ISR
  2151  000878  6E0B               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2152  00087A  EC4D  F006         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2153  00087E                     
  2154                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2155  00087E  010E               	movlb	14	; () banked
  2156  000880  99C5               	bcf	197,4,b	;volatile
  2157                           
  2158                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2159  000882  0ECC               	movlw	low _EUSART1_Transmit_ISR
  2160  000884  6E0A               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2161  000886  0E0A               	movlw	high _EUSART1_Transmit_ISR
  2162  000888  6E0B               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2163  00088A  EC48  F006         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2164  00088E                     
  2165                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2166  00088E  0E08               	movlw	8
  2167  000890  6E9F               	movwf	159,c	;volatile
  2168  000892                     
  2169                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2170  000892  0E90               	movlw	144
  2171  000894  6E9D               	movwf	157,c	;volatile
  2172  000896                     
  2173                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2174  000896  0E24               	movlw	36
  2175  000898  6E9E               	movwf	158,c	;volatile
  2176  00089A                     
  2177                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0xCF;
  2178  00089A  0ECF               	movlw	207
  2179  00089C  6E9B               	movwf	155,c	;volatile
  2180  00089E                     
  2181                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  2182  00089E  0E00               	movlw	0
  2183  0008A0  6E9C               	movwf	156,c	;volatile
  2184  0008A2                     
  2185                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2186  0008A2  0EDC               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2187  0008A4  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2188  0008A6  0E0C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2189  0008A8  6E0B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2190  0008AA  EC57  F006         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2191  0008AE                     
  2192                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2193  0008AE  0ECC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2194  0008B0  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2195  0008B2  0E0C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2196  0008B4  6E0B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2197  0008B6  EC52  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2198  0008BA                     
  2199                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2200  0008BA  0ED2               	movlw	low _EUSART1_DefaultErrorHandler
  2201  0008BC  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2202  0008BE  0E0C               	movlw	high _EUSART1_DefaultErrorHandler
  2203  0008C0  6E0B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2204  0008C2  EC5C  F006         	call	_EUSART1_SetErrorHandler	;wreg free
  2205                           
  2206                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2207  0008C6  0E00               	movlw	0
  2208  0008C8  6E2C               	movwf	_eusart1RxLastError^0,c	;volatile
  2209                           
  2210                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2211  0008CA  0E00               	movlw	0
  2212  0008CC  6E31               	movwf	_eusart1TxHead^0,c	;volatile
  2213                           
  2214                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2215  0008CE  0E00               	movlw	0
  2216  0008D0  6E30               	movwf	_eusart1TxTail^0,c	;volatile
  2217                           
  2218                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2219  0008D2  0E40               	movlw	64
  2220  0008D4  6E3E               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  2221                           
  2222                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2223  0008D6  0E00               	movlw	0
  2224  0008D8  6E2F               	movwf	_eusart1RxHead^0,c	;volatile
  2225                           
  2226                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2227  0008DA  0E00               	movlw	0
  2228  0008DC  6E2E               	movwf	_eusart1RxTail^0,c	;volatile
  2229                           
  2230                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2231  0008DE  0E00               	movlw	0
  2232  0008E0  6E2D               	movwf	_eusart1RxCount^0,c	;volatile
  2233  0008E2                     
  2234                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2235  0008E2  010E               	movlb	14	; () banked
  2236  0008E4  8BC5               	bsf	197,5,b	;volatile
  2237  0008E6                     
  2238                           ; BSR set to: 14
  2239  0008E6  0012               	return		;funcret
  2240  0008E8                     __end_of_EUSART1_Initialize:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2244 ;; Defined at:
  2245 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2248 ;;		 -> EUSART1_Transmit_ISR(1), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    4
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_EUSART1_Initialize
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text12
  2275  000C90                     __ptext12:
  2276                           	callstack 0
  2277  000C90                     _EUSART1_SetTxInterruptHandler:
  2278                           	callstack 24
  2279  000C90                     
  2280                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2281  000C90  C00A  F03A         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2282  000C94  C00B  F03B         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2283  000C98  0012               	return		;funcret
  2284  000C9A                     __end_of_EUSART1_SetTxInterruptHandler:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2288 ;; Defined at:
  2289 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2292 ;;		 -> EUSART1_Receive_ISR(1), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;Total ram usage:        2 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    4
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_EUSART1_Initialize
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text13
  2319  000C9A                     __ptext13:
  2320                           	callstack 0
  2321  000C9A                     _EUSART1_SetRxInterruptHandler:
  2322                           	callstack 24
  2323  000C9A                     
  2324                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2325  000C9A  C00A  F038         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2326  000C9E  C00B  F039         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2327  000CA2  0012               	return		;funcret
  2328  000CA4                     __end_of_EUSART1_SetRxInterruptHandler:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2332 ;; Defined at:
  2333 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2336 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    4
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_EUSART1_Initialize
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text14
  2363  000CA4                     __ptext14:
  2364                           	callstack 0
  2365  000CA4                     _EUSART1_SetOverrunErrorHandler:
  2366                           	callstack 24
  2367  000CA4                     
  2368                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2369  000CA4  C00A  F034         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2370  000CA8  C00B  F035         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2371  000CAC  0012               	return		;funcret
  2372  000CAE                     __end_of_EUSART1_SetOverrunErrorHandler:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2376 ;; Defined at:
  2377 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2380 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;Total ram usage:        2 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    4
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_EUSART1_Initialize
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text15
  2407  000CAE                     __ptext15:
  2408                           	callstack 0
  2409  000CAE                     _EUSART1_SetFramingErrorHandler:
  2410                           	callstack 24
  2411  000CAE                     
  2412                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2413  000CAE  C00A  F036         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2414  000CB2  C00B  F037         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2415  000CB6  0012               	return		;funcret
  2416  000CB8                     __end_of_EUSART1_SetFramingErrorHandler:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _EUSART1_SetErrorHandler *****************
  2420 ;; Defined at:
  2421 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2424 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    4
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_EUSART1_Initialize
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text16
  2451  000CB8                     __ptext16:
  2452                           	callstack 0
  2453  000CB8                     _EUSART1_SetErrorHandler:
  2454                           	callstack 24
  2455  000CB8                     
  2456                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2457  000CB8  C00A  F032         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2458  000CBC  C00B  F033         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2459  000CC0  0012               	return		;funcret
  2460  000CC2                     __end_of_EUSART1_SetErrorHandler:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _ADCC_Initialize *****************
  2464 ;; Defined at:
  2465 ;;		line 63 in file "mcc_generated_files/adcc.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    5
  2486 ;; This function calls:
  2487 ;;		_ADCC_SetADIInterruptHandler
  2488 ;; This function is called by:
  2489 ;;		_SYSTEM_Initialize
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text17
  2495  0009C0                     __ptext17:
  2496                           	callstack 0
  2497  0009C0                     _ADCC_Initialize:
  2498                           	callstack 24
  2499  0009C0                     
  2500                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  2501  0009C0  0E00               	movlw	0
  2502  0009C2  6E6A               	movwf	106,c	;volatile
  2503                           
  2504                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  2505  0009C4  0E00               	movlw	0
  2506  0009C6  6E6B               	movwf	107,c	;volatile
  2507                           
  2508                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  2509  0009C8  0E00               	movlw	0
  2510  0009CA  6E6C               	movwf	108,c	;volatile
  2511                           
  2512                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  2513  0009CC  0E00               	movlw	0
  2514  0009CE  6E6D               	movwf	109,c	;volatile
  2515                           
  2516                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  2517  0009D0  0E00               	movlw	0
  2518  0009D2  6E68               	movwf	104,c	;volatile
  2519                           
  2520                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  2521  0009D4  0E00               	movlw	0
  2522  0009D6  6E69               	movwf	105,c	;volatile
  2523                           
  2524                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  2525  0009D8  0E00               	movlw	0
  2526  0009DA  6E66               	movwf	102,c	;volatile
  2527                           
  2528                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  2529  0009DC  0E00               	movlw	0
  2530  0009DE  010F               	movlb	15	; () banked
  2531  0009E0  6F5F               	movwf	95,b	;volatile
  2532                           
  2533                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  2534  0009E2  0E00               	movlw	0
  2535  0009E4  6F5D               	movwf	93,b	;volatile
  2536                           
  2537                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  2538  0009E6  0E00               	movlw	0
  2539  0009E8  6F5E               	movwf	94,b	;volatile
  2540                           
  2541                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  2542  0009EA  0E00               	movlw	0
  2543  0009EC  6F59               	movwf	89,b	;volatile
  2544                           
  2545                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  2546  0009EE  0E00               	movlw	0
  2547  0009F0  6F5A               	movwf	90,b	;volatile
  2548                           
  2549                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  2550  0009F2  0E00               	movlw	0
  2551  0009F4  6F5B               	movwf	91,b	;volatile
  2552                           
  2553                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  2554  0009F6  0E00               	movlw	0
  2555  0009F8  6E65               	movwf	101,c	;volatile
  2556                           
  2557                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  2558  0009FA  0E00               	movlw	0
  2559  0009FC  6F58               	movwf	88,b	;volatile
  2560                           
  2561                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x08;
  2562  0009FE  0E08               	movlw	8
  2563  000A00  6F56               	movwf	86,b	;volatile
  2564                           
  2565                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x3F;
  2566  000A02  0E3F               	movlw	63
  2567  000A04  6F57               	movwf	87,b	;volatile
  2568                           
  2569                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  2570  000A06  0E84               	movlw	132
  2571  000A08  6E60               	movwf	96,c	;volatile
  2572                           
  2573                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  2574  000A0A  0E00               	movlw	0
  2575  000A0C  6F5C               	movwf	92,b	;volatile
  2576  000A0E                     
  2577                           ; BSR set to: 15
  2578                           ;mcc_generated_files/adcc.c: 106:     PIR1bits.ADIF = 0;
  2579  000A0E  010E               	movlb	14	; () banked
  2580  000A10  91CB               	bcf	203,0,b	;volatile
  2581  000A12                     
  2582                           ; BSR set to: 14
  2583                           ;mcc_generated_files/adcc.c: 108:     PIE1bits.ADIE = 1;
  2584  000A12  81C3               	bsf	195,0,b	;volatile
  2585  000A14                     
  2586                           ; BSR set to: 14
  2587                           ;mcc_generated_files/adcc.c: 110:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  2588  000A14  0EDE               	movlw	low _ADCC_DefaultInterruptHandler
  2589  000A16  6E0A               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  2590  000A18  0E0C               	movlw	high _ADCC_DefaultInterruptHandler
  2591  000A1A  6E0B               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  2592  000A1C  EC61  F006         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2593  000A20  0012               	return		;funcret
  2594  000A22                     __end_of_ADCC_Initialize:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  2598 ;; Defined at:
  2599 ;;		line 307 in file "mcc_generated_files/adcc.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  InterruptHan    2    9[COMRAM] PTR FTN()void 
  2602 ;;		 -> ADC_Trabajando(1), ADCC_DefaultInterruptHandler(1), 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_ADCC_Initialize
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text18
  2630  000CC2                     __ptext18:
  2631                           	callstack 0
  2632  000CC2                     _ADCC_SetADIInterruptHandler:
  2633                           	callstack 24
  2634  000CC2                     
  2635                           ;mcc_generated_files/adcc.c: 308:     ADCC_ADI_InterruptHandler = InterruptHandler;
  2636  000CC2  C00A  F03C         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  2637  000CC6  C00B  F03D         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  2638  000CCA  0012               	return		;funcret
  2639  000CCC                     __end_of_ADCC_SetADIInterruptHandler:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _EUSART1_is_rx_ready *****************
  2643 ;; Defined at:
  2644 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      _Bool 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    4
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text19
  2673  000C66                     __ptext19:
  2674                           	callstack 0
  2675  000C66                     _EUSART1_is_rx_ready:
  2676                           	callstack 26
  2677  000C66                     
  2678                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  2679  000C66  502D               	movf	_eusart1RxCount^0,w,c	;volatile
  2680  000C68  A4D8               	btfss	status,2,c
  2681  000C6A  EF39  F006         	goto	u51
  2682  000C6E  EF3C  F006         	goto	u50
  2683  000C72                     u51:
  2684  000C72  0E01               	movlw	1
  2685  000C74  EF3D  F006         	goto	u60
  2686  000C78                     u50:
  2687  000C78  0E00               	movlw	0
  2688  000C7A                     u60:
  2689  000C7A  0012               	return		;funcret
  2690  000C7C                     __end_of_EUSART1_is_rx_ready:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _EUSART1_Write *****************
  2694 ;; Defined at:
  2695 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  txData          1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  txData          1    9[COMRAM] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2713 ;;Total ram usage:        1 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    4
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text20
  2724  000A22                     __ptext20:
  2725                           	callstack 0
  2726  000A22                     _EUSART1_Write:
  2727                           	callstack 26
  2728                           
  2729                           ;incstack = 0
  2730                           ;EUSART1_Write@txData stored from wreg
  2731  000A22  6E0A               	movwf	EUSART1_Write@txData^0,c
  2732  000A24                     l2116:
  2733                           
  2734                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2735  000A24  503E               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  2736  000A26  B4D8               	btfsc	status,2,c
  2737  000A28  EF18  F005         	goto	u741
  2738  000A2C  EF1A  F005         	goto	u740
  2739  000A30                     u741:
  2740  000A30  EF12  F005         	goto	l2116
  2741  000A34                     u740:
  2742  000A34                     
  2743                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  2744  000A34  010E               	movlb	14	; () banked
  2745  000A36  B9C5               	btfsc	197,4,b	;volatile
  2746  000A38  EF20  F005         	goto	u751
  2747  000A3C  EF22  F005         	goto	u750
  2748  000A40                     u751:
  2749  000A40  EF26  F005         	goto	l466
  2750  000A44                     u750:
  2751  000A44                     
  2752                           ; BSR set to: 14
  2753                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  2754  000A44  C00A  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2755                           
  2756                           ;mcc_generated_files/eusart1.c: 182:     }
  2757  000A48  EF3B  F005         	goto	l2130
  2758  000A4C                     l466:
  2759                           
  2760                           ; BSR set to: 14
  2761                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  2762  000A4C  99C5               	bcf	197,4,b	;volatile
  2763  000A4E                     
  2764                           ; BSR set to: 14
  2765                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2766  000A4E  0EA0               	movlw	low _eusart1TxBuffer
  2767  000A50  2431               	addwf	_eusart1TxHead^0,w,c	;volatile
  2768  000A52  6ED9               	movwf	fsr2l,c
  2769  000A54  6ADA               	clrf	fsr2h,c
  2770  000A56  0E00               	movlw	high _eusart1TxBuffer
  2771  000A58  22DA               	addwfc	fsr2h,f,c
  2772  000A5A  C00A  FFDF         	movff	EUSART1_Write@txData,indf2
  2773  000A5E                     
  2774                           ; BSR set to: 14
  2775  000A5E  2A31               	incf	_eusart1TxHead^0,f,c	;volatile
  2776  000A60                     
  2777                           ; BSR set to: 14
  2778                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2779  000A60  0E3F               	movlw	63
  2780  000A62  6431               	cpfsgt	_eusart1TxHead^0,c	;volatile
  2781  000A64  EF36  F005         	goto	u761
  2782  000A68  EF38  F005         	goto	u760
  2783  000A6C                     u761:
  2784  000A6C  EF3A  F005         	goto	l2128
  2785  000A70                     u760:
  2786  000A70                     
  2787                           ; BSR set to: 14
  2788                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2789  000A70  0E00               	movlw	0
  2790  000A72  6E31               	movwf	_eusart1TxHead^0,c	;volatile
  2791  000A74                     l2128:
  2792                           
  2793                           ; BSR set to: 14
  2794                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2795  000A74  063E               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2796  000A76                     l2130:
  2797                           
  2798                           ; BSR set to: 14
  2799                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2800  000A76  89C5               	bsf	197,4,b	;volatile
  2801  000A78                     
  2802                           ; BSR set to: 14
  2803  000A78  0012               	return		;funcret
  2804  000A7A                     __end_of_EUSART1_Write:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _EUSART1_Read *****************
  2808 ;; Defined at:
  2809 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  readValue       1    9[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      unsigned char 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;Total ram usage:        1 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    4
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text21
  2838  000A7A                     __ptext21:
  2839                           	callstack 0
  2840  000A7A                     _EUSART1_Read:
  2841                           	callstack 26
  2842  000A7A                     l2094:
  2843                           
  2844                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  2845  000A7A  502D               	movf	_eusart1RxCount^0,w,c	;volatile
  2846  000A7C  B4D8               	btfsc	status,2,c
  2847  000A7E  EF43  F005         	goto	u721
  2848  000A82  EF45  F005         	goto	u720
  2849  000A86                     u721:
  2850  000A86  EF3D  F005         	goto	l2094
  2851  000A8A                     u720:
  2852  000A8A                     
  2853                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  2854  000A8A  0E60               	movlw	low _eusart1RxStatusBuffer
  2855  000A8C  242E               	addwf	_eusart1RxTail^0,w,c	;volatile
  2856  000A8E  6ED9               	movwf	fsr2l,c
  2857  000A90  6ADA               	clrf	fsr2h,c
  2858  000A92  0E00               	movlw	high _eusart1RxStatusBuffer
  2859  000A94  22DA               	addwfc	fsr2h,f,c
  2860  000A96  50DF               	movf	indf2,w,c
  2861  000A98  6E2C               	movwf	_eusart1RxLastError^0,c	;volatile
  2862                           
  2863                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  2864  000A9A  0E00               	movlw	low _eusart1RxBuffer
  2865  000A9C  242E               	addwf	_eusart1RxTail^0,w,c	;volatile
  2866  000A9E  6ED9               	movwf	fsr2l,c
  2867  000AA0  6ADA               	clrf	fsr2h,c
  2868  000AA2  0E01               	movlw	high _eusart1RxBuffer
  2869  000AA4  22DA               	addwfc	fsr2h,f,c
  2870  000AA6  50DF               	movf	indf2,w,c
  2871  000AA8  6E0A               	movwf	EUSART1_Read@readValue^0,c
  2872  000AAA  2A2E               	incf	_eusart1RxTail^0,f,c	;volatile
  2873  000AAC                     
  2874                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2875  000AAC  0E3F               	movlw	63
  2876  000AAE  642E               	cpfsgt	_eusart1RxTail^0,c	;volatile
  2877  000AB0  EF5C  F005         	goto	u731
  2878  000AB4  EF5E  F005         	goto	u730
  2879  000AB8                     u731:
  2880  000AB8  EF60  F005         	goto	l2104
  2881  000ABC                     u730:
  2882  000ABC                     
  2883                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  2884  000ABC  0E00               	movlw	0
  2885  000ABE  6E2E               	movwf	_eusart1RxTail^0,c	;volatile
  2886  000AC0                     l2104:
  2887                           
  2888                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  2889  000AC0  010E               	movlb	14	; () banked
  2890  000AC2  9BC5               	bcf	197,5,b	;volatile
  2891  000AC4                     
  2892                           ; BSR set to: 14
  2893                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  2894  000AC4  062D               	decf	_eusart1RxCount^0,f,c	;volatile
  2895  000AC6                     
  2896                           ; BSR set to: 14
  2897                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  2898  000AC6  8BC5               	bsf	197,5,b	;volatile
  2899  000AC8                     
  2900                           ; BSR set to: 14
  2901                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  2902  000AC8  500A               	movf	EUSART1_Read@readValue^0,w,c
  2903  000ACA                     
  2904                           ; BSR set to: 14
  2905  000ACA  0012               	return		;funcret
  2906  000ACC                     __end_of_EUSART1_Read:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _INTERRUPT_InterruptManager *****************
  2910 ;; Defined at:
  2911 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;Total ram usage:        4 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		Absolute function
  2934 ;;		_ADCC_ISR
  2935 ;;		_EUSART1_Receive_ISR
  2936 ;;		_EUSART1_Transmit_ISR
  2937 ;; This function is called by:
  2938 ;;		Interrupt level 2
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	intcode
  2943  000008                     __pintcode:
  2944                           	callstack 0
  2945  000008                     _INTERRUPT_InterruptManager:
  2946                           	callstack 24
  2947                           
  2948                           ; BSR set to: 14
  2949                           ;incstack = 0
  2950  000008  823F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2951  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  2952  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2953  000012  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2954  000016  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2955  00001A                     
  2956                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2957  00001A  ACF2               	btfss	242,6,c	;volatile
  2958  00001C  EF12  F000         	goto	i2u118_41
  2959  000020  EF14  F000         	goto	i2u118_40
  2960  000024                     i2u118_41:
  2961  000024  EF61  F000         	goto	i2l626
  2962  000028                     i2u118_40:
  2963  000028                     
  2964                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  2965  000028  010E               	movlb	14	; () banked
  2966  00002A  A9C5               	btfss	197,4,b	;volatile
  2967  00002C  EF1A  F000         	goto	i2u119_41
  2968  000030  EF1C  F000         	goto	i2u119_40
  2969  000034                     i2u119_41:
  2970  000034  EF32  F000         	goto	i2l619
  2971  000038                     i2u119_40:
  2972  000038                     
  2973                           ; BSR set to: 14
  2974  000038  A9CD               	btfss	205,4,b	;volatile
  2975  00003A  EF21  F000         	goto	i2u120_41
  2976  00003E  EF23  F000         	goto	i2u120_40
  2977  000042                     i2u120_41:
  2978  000042  EF32  F000         	goto	i2l619
  2979  000046                     i2u120_40:
  2980  000046                     
  2981                           ; BSR set to: 14
  2982                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  2983  000046  D802               	call	i2u121_48
  2984  000048  EF30  F000         	goto	i2u121_49
  2985  00004C                     i2u121_48:
  2986  00004C  0005               	push	
  2987  00004E  6EFA               	movwf	pclath,c
  2988  000050  503A               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  2989  000052  6EFD               	movwf	tosl,c
  2990  000054  503B               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  2991  000056  6EFE               	movwf	tosh,c
  2992  000058  50F8               	movf	tblptru,w,c
  2993  00005A  6EFF               	movwf	tosu,c
  2994  00005C  50FA               	movf	pclath,w,c
  2995  00005E  0012               	return		;indir
  2996  000060                     i2u121_49:
  2997                           
  2998                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2999  000060  EF61  F000         	goto	i2l626
  3000  000064                     i2l619:
  3001                           
  3002                           ; BSR set to: 14
  3003  000064  ABC5               	btfss	197,5,b	;volatile
  3004  000066  EF37  F000         	goto	i2u122_41
  3005  00006A  EF39  F000         	goto	i2u122_40
  3006  00006E                     i2u122_41:
  3007  00006E  EF4F  F000         	goto	i2l621
  3008  000072                     i2u122_40:
  3009  000072                     
  3010                           ; BSR set to: 14
  3011  000072  ABCD               	btfss	205,5,b	;volatile
  3012  000074  EF3E  F000         	goto	i2u123_41
  3013  000078  EF40  F000         	goto	i2u123_40
  3014  00007C                     i2u123_41:
  3015  00007C  EF4F  F000         	goto	i2l621
  3016  000080                     i2u123_40:
  3017  000080                     
  3018                           ; BSR set to: 14
  3019                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  3020  000080  D802               	call	i2u124_48
  3021  000082  EF4D  F000         	goto	i2u124_49
  3022  000086                     i2u124_48:
  3023  000086  0005               	push	
  3024  000088  6EFA               	movwf	pclath,c
  3025  00008A  5038               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  3026  00008C  6EFD               	movwf	tosl,c
  3027  00008E  5039               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  3028  000090  6EFE               	movwf	tosh,c
  3029  000092  50F8               	movf	tblptru,w,c
  3030  000094  6EFF               	movwf	tosu,c
  3031  000096  50FA               	movf	pclath,w,c
  3032  000098  0012               	return		;indir
  3033  00009A                     i2u124_49:
  3034                           
  3035                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  3036  00009A  EF61  F000         	goto	i2l626
  3037  00009E                     i2l621:
  3038                           
  3039                           ; BSR set to: 14
  3040  00009E  A1C3               	btfss	195,0,b	;volatile
  3041  0000A0  EF54  F000         	goto	i2u125_41
  3042  0000A4  EF56  F000         	goto	i2u125_40
  3043  0000A8                     i2u125_41:
  3044  0000A8  EF61  F000         	goto	i2l620
  3045  0000AC                     i2u125_40:
  3046  0000AC                     
  3047                           ; BSR set to: 14
  3048  0000AC  A1CB               	btfss	203,0,b	;volatile
  3049  0000AE  EF5B  F000         	goto	i2u126_41
  3050  0000B2  EF5D  F000         	goto	i2u126_40
  3051  0000B6                     i2u126_41:
  3052  0000B6  EF61  F000         	goto	i2l620
  3053  0000BA                     i2u126_40:
  3054  0000BA                     
  3055                           ; BSR set to: 14
  3056                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADCC_ISR();
  3057  0000BA  ECBB  F005         	call	_ADCC_ISR	;wreg free
  3058                           
  3059                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  3060  0000BE  EF61  F000         	goto	i2l626
  3061  0000C2                     i2l620:
  3062  0000C2                     i2l626:
  3063  0000C2  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3064  0000C6  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3065  0000CA  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3066  0000CE  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3067  0000D2  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3068  0000D4  0011               	retfie		f
  3069  0000D6                     __end_of_INTERRUPT_InterruptManager:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _EUSART1_Transmit_ISR *****************
  3073 ;; Defined at:
  3074 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_EUSART1_Initialize
  3098 ;;		_INTERRUPT_InterruptManager
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text23
  3103  000ACC                     __ptext23:
  3104                           	callstack 0
  3105  000ACC                     _EUSART1_Transmit_ISR:
  3106                           	callstack 26
  3107  000ACC                     
  3108                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3109  000ACC  0E40               	movlw	64
  3110  000ACE  603E               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  3111  000AD0  EF6C  F005         	goto	i2u77_41
  3112  000AD4  EF6E  F005         	goto	i2u77_40
  3113  000AD8                     i2u77_41:
  3114  000AD8  EF84  F005         	goto	i2l472
  3115  000ADC                     i2u77_40:
  3116  000ADC                     
  3117                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  3118  000ADC  0EA0               	movlw	low _eusart1TxBuffer
  3119  000ADE  2430               	addwf	_eusart1TxTail^0,w,c	;volatile
  3120  000AE0  6ED9               	movwf	fsr2l,c
  3121  000AE2  6ADA               	clrf	fsr2h,c
  3122  000AE4  0E00               	movlw	high _eusart1TxBuffer
  3123  000AE6  22DA               	addwfc	fsr2h,f,c
  3124  000AE8  50DF               	movf	indf2,w,c
  3125  000AEA  6E9A               	movwf	154,c	;volatile
  3126  000AEC  2A30               	incf	_eusart1TxTail^0,f,c	;volatile
  3127  000AEE                     
  3128                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3129  000AEE  0E3F               	movlw	63
  3130  000AF0  6430               	cpfsgt	_eusart1TxTail^0,c	;volatile
  3131  000AF2  EF7D  F005         	goto	i2u78_41
  3132  000AF6  EF7F  F005         	goto	i2u78_40
  3133  000AFA                     i2u78_41:
  3134  000AFA  EF81  F005         	goto	i2l2142
  3135  000AFE                     i2u78_40:
  3136  000AFE                     
  3137                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  3138  000AFE  0E00               	movlw	0
  3139  000B00  6E30               	movwf	_eusart1TxTail^0,c	;volatile
  3140  000B02                     i2l2142:
  3141                           
  3142                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  3143  000B02  2A3E               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3144                           
  3145                           ;mcc_generated_files/eusart1.c: 209:     }
  3146  000B04  EF86  F005         	goto	i2l475
  3147  000B08                     i2l472:
  3148                           
  3149                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  3150  000B08  010E               	movlb	14	; () banked
  3151  000B0A  99C5               	bcf	197,4,b	;volatile
  3152  000B0C                     i2l475:
  3153  000B0C  0012               	return		;funcret
  3154  000B0E                     __end_of_EUSART1_Transmit_ISR:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _EUSART1_Receive_ISR *****************
  3158 ;; Defined at:
  3159 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    2
  3180 ;; This function calls:
  3181 ;;		Absolute function
  3182 ;;		_EUSART1_DefaultErrorHandler
  3183 ;;		_EUSART1_DefaultFramingErrorHandler
  3184 ;;		_EUSART1_DefaultOverrunErrorHandler
  3185 ;;		_EUSART1_RxDataHandler
  3186 ;; This function is called by:
  3187 ;;		_EUSART1_Initialize
  3188 ;;		_INTERRUPT_InterruptManager
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text24
  3193  00072E                     __ptext24:
  3194                           	callstack 0
  3195  00072E                     _EUSART1_Receive_ISR:
  3196                           	callstack 24
  3197  00072E                     
  3198                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3199  00072E  0E60               	movlw	low _eusart1RxStatusBuffer
  3200  000730  242F               	addwf	_eusart1RxHead^0,w,c	;volatile
  3201  000732  6ED9               	movwf	fsr2l,c
  3202  000734  6ADA               	clrf	fsr2h,c
  3203  000736  0E00               	movlw	high _eusart1RxStatusBuffer
  3204  000738  22DA               	addwfc	fsr2h,f,c
  3205  00073A  0E00               	movlw	0
  3206  00073C  6EDF               	movwf	indf2,c
  3207  00073E                     
  3208                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  3209  00073E  A49D               	btfss	157,2,c	;volatile
  3210  000740  EFA4  F003         	goto	i2u79_41
  3211  000744  EFA6  F003         	goto	i2u79_40
  3212  000748                     i2u79_41:
  3213  000748  EFBB  F003         	goto	i2l2152
  3214  00074C                     i2u79_40:
  3215  00074C                     
  3216                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3217  00074C  0E60               	movlw	low _eusart1RxStatusBuffer
  3218  00074E  242F               	addwf	_eusart1RxHead^0,w,c	;volatile
  3219  000750  6ED9               	movwf	fsr2l,c
  3220  000752  6ADA               	clrf	fsr2h,c
  3221  000754  0E00               	movlw	high _eusart1RxStatusBuffer
  3222  000756  22DA               	addwfc	fsr2h,f,c
  3223  000758  0100               	movlb	0	; () banked
  3224  00075A  82DF               	bsf	indf2,1,c
  3225  00075C                     
  3226                           ; BSR set to: 0
  3227                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  3228  00075C  D802               	call	i2u80_48
  3229  00075E  EFBB  F003         	goto	i2u80_49
  3230  000762                     i2u80_48:
  3231  000762  0005               	push	
  3232  000764  6EFA               	movwf	pclath,c
  3233  000766  5036               	movf	_EUSART1_FramingErrorHandler^0,w,c
  3234  000768  6EFD               	movwf	tosl,c
  3235  00076A  5037               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  3236  00076C  6EFE               	movwf	tosh,c
  3237  00076E  50F8               	movf	tblptru,w,c
  3238  000770  6EFF               	movwf	tosu,c
  3239  000772  50FA               	movf	pclath,w,c
  3240  000774  0012               	return		;indir
  3241  000776                     i2u80_49:
  3242  000776                     i2l2152:
  3243                           
  3244                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  3245  000776  A29D               	btfss	157,1,c	;volatile
  3246  000778  EFC0  F003         	goto	i2u81_41
  3247  00077C  EFC2  F003         	goto	i2u81_40
  3248  000780                     i2u81_41:
  3249  000780  EFD7  F003         	goto	i2l2158
  3250  000784                     i2u81_40:
  3251  000784                     
  3252                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  3253  000784  0E60               	movlw	low _eusart1RxStatusBuffer
  3254  000786  242F               	addwf	_eusart1RxHead^0,w,c	;volatile
  3255  000788  6ED9               	movwf	fsr2l,c
  3256  00078A  6ADA               	clrf	fsr2h,c
  3257  00078C  0E00               	movlw	high _eusart1RxStatusBuffer
  3258  00078E  22DA               	addwfc	fsr2h,f,c
  3259  000790  0100               	movlb	0	; () banked
  3260  000792  84DF               	bsf	indf2,2,c
  3261  000794                     
  3262                           ; BSR set to: 0
  3263                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  3264  000794  D802               	call	i2u82_48
  3265  000796  EFD7  F003         	goto	i2u82_49
  3266  00079A                     i2u82_48:
  3267  00079A  0005               	push	
  3268  00079C  6EFA               	movwf	pclath,c
  3269  00079E  5034               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  3270  0007A0  6EFD               	movwf	tosl,c
  3271  0007A2  5035               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  3272  0007A4  6EFE               	movwf	tosh,c
  3273  0007A6  50F8               	movf	tblptru,w,c
  3274  0007A8  6EFF               	movwf	tosu,c
  3275  0007AA  50FA               	movf	pclath,w,c
  3276  0007AC  0012               	return		;indir
  3277  0007AE                     i2u82_49:
  3278  0007AE                     i2l2158:
  3279                           
  3280                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  3281  0007AE  0E60               	movlw	low _eusart1RxStatusBuffer
  3282  0007B0  242F               	addwf	_eusart1RxHead^0,w,c	;volatile
  3283  0007B2  6ED9               	movwf	fsr2l,c
  3284  0007B4  6ADA               	clrf	fsr2h,c
  3285  0007B6  0E00               	movlw	high _eusart1RxStatusBuffer
  3286  0007B8  22DA               	addwfc	fsr2h,f,c
  3287  0007BA  50DF               	movf	indf2,w,c
  3288  0007BC  B4D8               	btfsc	status,2,c
  3289  0007BE  EFE3  F003         	goto	i2u83_41
  3290  0007C2  EFE5  F003         	goto	i2u83_40
  3291  0007C6                     i2u83_41:
  3292  0007C6  EFF4  F003         	goto	i2l2162
  3293  0007CA                     i2u83_40:
  3294  0007CA                     
  3295                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  3296  0007CA  D802               	call	i2u84_48
  3297  0007CC  EFF2  F003         	goto	i2u84_49
  3298  0007D0                     i2u84_48:
  3299  0007D0  0005               	push	
  3300  0007D2  6EFA               	movwf	pclath,c
  3301  0007D4  5032               	movf	_EUSART1_ErrorHandler^0,w,c
  3302  0007D6  6EFD               	movwf	tosl,c
  3303  0007D8  5033               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  3304  0007DA  6EFE               	movwf	tosh,c
  3305  0007DC  50F8               	movf	tblptru,w,c
  3306  0007DE  6EFF               	movwf	tosu,c
  3307  0007E0  50FA               	movf	pclath,w,c
  3308  0007E2  0012               	return		;indir
  3309  0007E4                     i2u84_49:
  3310                           
  3311                           ;mcc_generated_files/eusart1.c: 233:     } else {
  3312  0007E4  EFF6  F003         	goto	i2l482
  3313  0007E8                     i2l2162:
  3314                           
  3315                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  3316  0007E8  ECD4  F005         	call	_EUSART1_RxDataHandler	;wreg free
  3317  0007EC                     i2l482:
  3318  0007EC  0012               	return		;funcret
  3319  0007EE                     __end_of_EUSART1_Receive_ISR:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  3323 ;; Defined at:
  3324 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		None
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_EUSART1_Initialize
  3348 ;;		_EUSART1_Receive_ISR
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text25
  3353  000CCC                     __ptext25:
  3354                           	callstack 0
  3355  000CCC                     _EUSART1_DefaultOverrunErrorHandler:
  3356                           	callstack 25
  3357  000CCC                     
  3358                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  3359  000CCC  989D               	bcf	157,4,c	;volatile
  3360                           
  3361                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  3362  000CCE  889D               	bsf	157,4,c	;volatile
  3363  000CD0  0012               	return		;funcret
  3364  000CD2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  3368 ;; Defined at:
  3369 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		None
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_EUSART1_Initialize
  3393 ;;		_EUSART1_Receive_ISR
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text26
  3398  000CDC                     __ptext26:
  3399                           	callstack 0
  3400  000CDC                     _EUSART1_DefaultFramingErrorHandler:
  3401                           	callstack 25
  3402  000CDC  0012               	return		;funcret
  3403  000CDE                     __end_of_EUSART1_DefaultFramingErrorHandler:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  3407 ;; Defined at:
  3408 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    1
  3429 ;; This function calls:
  3430 ;;		_EUSART1_RxDataHandler
  3431 ;; This function is called by:
  3432 ;;		_EUSART1_Initialize
  3433 ;;		_EUSART1_Receive_ISR
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text27
  3438  000CD2                     __ptext27:
  3439                           	callstack 0
  3440  000CD2                     _EUSART1_DefaultErrorHandler:
  3441                           	callstack 24
  3442  000CD2                     
  3443                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  3444  000CD2  ECD4  F005         	call	_EUSART1_RxDataHandler	;wreg free
  3445  000CD6  0012               	return		;funcret
  3446  000CD8                     __end_of_EUSART1_DefaultErrorHandler:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _EUSART1_RxDataHandler *****************
  3450 ;; Defined at:
  3451 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_EUSART1_Receive_ISR
  3475 ;;		_EUSART1_DefaultErrorHandler
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text28
  3480  000BA8                     __ptext28:
  3481                           	callstack 0
  3482  000BA8                     _EUSART1_RxDataHandler:
  3483                           	callstack 25
  3484  000BA8                     
  3485                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3486  000BA8  0E00               	movlw	low _eusart1RxBuffer
  3487  000BAA  242F               	addwf	_eusart1RxHead^0,w,c	;volatile
  3488  000BAC  6ED9               	movwf	fsr2l,c
  3489  000BAE  6ADA               	clrf	fsr2h,c
  3490  000BB0  0E01               	movlw	high _eusart1RxBuffer
  3491  000BB2  22DA               	addwfc	fsr2h,f,c
  3492  000BB4  CF99 FFDF          	movff	3993,indf2	;volatile
  3493  000BB8  2A2F               	incf	_eusart1RxHead^0,f,c	;volatile
  3494  000BBA                     
  3495                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3496  000BBA  0E3F               	movlw	63
  3497  000BBC  642F               	cpfsgt	_eusart1RxHead^0,c	;volatile
  3498  000BBE  EFE3  F005         	goto	i2u68_41
  3499  000BC2  EFE5  F005         	goto	i2u68_40
  3500  000BC6                     i2u68_41:
  3501  000BC6  EFE7  F005         	goto	i2l2028
  3502  000BCA                     i2u68_40:
  3503  000BCA                     
  3504                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  3505  000BCA  0E00               	movlw	0
  3506  000BCC  6E2F               	movwf	_eusart1RxHead^0,c	;volatile
  3507  000BCE                     i2l2028:
  3508                           
  3509                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  3510  000BCE  2A2D               	incf	_eusart1RxCount^0,f,c	;volatile
  3511  000BD0  0012               	return		;funcret
  3512  000BD2                     __end_of_EUSART1_RxDataHandler:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _ADCC_ISR *****************
  3516 ;; Defined at:
  3517 ;;		line 298 in file "mcc_generated_files/adcc.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    2
  3538 ;; This function calls:
  3539 ;;		Absolute function
  3540 ;;		_ADCC_DefaultInterruptHandler
  3541 ;;		_ADC_Trabajando
  3542 ;; This function is called by:
  3543 ;;		_INTERRUPT_InterruptManager
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text29
  3548  000B76                     __ptext29:
  3549                           	callstack 0
  3550  000B76                     _ADCC_ISR:
  3551                           	callstack 24
  3552  000B76                     
  3553                           ;mcc_generated_files/adcc.c: 301:     PIR1bits.ADIF = 0;
  3554  000B76  010E               	movlb	14	; () banked
  3555  000B78  91CB               	bcf	203,0,b	;volatile
  3556  000B7A                     
  3557                           ; BSR set to: 14
  3558                           ;mcc_generated_files/adcc.c: 303:     if (ADCC_ADI_InterruptHandler)
  3559  000B7A  503C               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  3560  000B7C  103D               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  3561  000B7E  B4D8               	btfsc	status,2,c
  3562  000B80  EFC4  F005         	goto	i2u70_41
  3563  000B84  EFC6  F005         	goto	i2u70_40
  3564  000B88                     i2u70_41:
  3565  000B88  EFD3  F005         	goto	i2l248
  3566  000B8C                     i2u70_40:
  3567  000B8C                     
  3568                           ; BSR set to: 14
  3569                           ;mcc_generated_files/adcc.c: 304:             ADCC_ADI_InterruptHandler();
  3570  000B8C  D802               	call	i2u71_48
  3571  000B8E  EFD3  F005         	goto	i2u71_49
  3572  000B92                     i2u71_48:
  3573  000B92  0005               	push	
  3574  000B94  6EFA               	movwf	pclath,c
  3575  000B96  503C               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  3576  000B98  6EFD               	movwf	tosl,c
  3577  000B9A  503D               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  3578  000B9C  6EFE               	movwf	tosh,c
  3579  000B9E  50F8               	movf	tblptru,w,c
  3580  000BA0  6EFF               	movwf	tosu,c
  3581  000BA2  50FA               	movf	pclath,w,c
  3582  000BA4  0012               	return		;indir
  3583  000BA6                     i2u71_49:
  3584  000BA6                     i2l248:
  3585  000BA6  0012               	return		;funcret
  3586  000BA8                     __end_of_ADCC_ISR:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  3590 ;; Defined at:
  3591 ;;		line 311 in file "mcc_generated_files/adcc.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		None
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;Total ram usage:        0 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_ADCC_Initialize
  3615 ;;		_ADCC_ISR
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text30
  3620  000CDE                     __ptext30:
  3621                           	callstack 0
  3622  000CDE                     _ADCC_DefaultInterruptHandler:
  3623                           	callstack 25
  3624  000CDE  0012               	return		;funcret
  3625  000CE0                     __end_of_ADCC_DefaultInterruptHandler:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _ADC_Trabajando *****************
  3629 ;; Defined at:
  3630 ;;		line 58 in file "main.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;Total ram usage:        1 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		_ADCC_GetConversionResult
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;;		_ADCC_ISR
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text31
  3660  000B0E                     __ptext31:
  3661                           	callstack 0
  3662  000B0E                     _ADC_Trabajando:
  3663                           	callstack 24
  3664  000B0E                     
  3665                           ;main.c: 60:     adc=ADCC_GetConversionResult();
  3666  000B0E  EC3E  F006         	call	_ADCC_GetConversionResult	;wreg free
  3667  000B12  C001  F024         	movff	?_ADCC_GetConversionResult,_adc	;volatile
  3668  000B16  C002  F025         	movff	?_ADCC_GetConversionResult+1,_adc+1	;volatile
  3669  000B1A  BA86               	btfsc	134,5,c	;volatile
  3670  000B1C  EF92  F005         	goto	i2u69_41
  3671  000B20  EF95  F005         	goto	i2u69_40
  3672  000B24                     i2u69_41:
  3673  000B24  0E01               	movlw	1
  3674  000B26  EF96  F005         	goto	i2u69_46
  3675  000B2A                     i2u69_40:
  3676  000B2A  0E00               	movlw	0
  3677  000B2C                     i2u69_46:
  3678  000B2C  0AFF               	xorlw	255
  3679  000B2E  6E05               	movwf	??_ADC_Trabajando^0,c
  3680  000B30  3A05               	swapf	??_ADC_Trabajando^0,f,c
  3681  000B32  4605               	rlncf	??_ADC_Trabajando^0,f,c
  3682  000B34  5086               	movf	134,w,c	;volatile
  3683  000B36  1805               	xorwf	??_ADC_Trabajando^0,w,c
  3684  000B38  0BDF               	andlw	-33
  3685  000B3A  1805               	xorwf	??_ADC_Trabajando^0,w,c
  3686  000B3C  6E86               	movwf	134,c	;volatile
  3687  000B3E                     
  3688                           ;main.c: 62:     TengoADC=1;
  3689  000B3E  0E01               	movlw	1
  3690  000B40  6E28               	movwf	_TengoADC^0,c	;volatile
  3691  000B42  0012               	return		;funcret
  3692  000B44                     __end_of_ADC_Trabajando:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _ADCC_GetConversionResult *****************
  3696 ;; Defined at:
  3697 ;;		line 132 in file "mcc_generated_files/adcc.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2    0[COMRAM] unsigned short 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;Total ram usage:        4 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_ADC_Trabajando
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text32
  3725  000C7C                     __ptext32:
  3726                           	callstack 0
  3727  000C7C                     _ADCC_GetConversionResult:
  3728                           	callstack 24
  3729  000C7C                     
  3730                           ;mcc_generated_files/adcc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3731  000C7C  5064               	movf	100,w,c	;volatile
  3732  000C7E  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  3733  000C80  6A03               	clrf	??_ADCC_GetConversionResult^0,c
  3734  000C82  5063               	movf	99,w,c	;volatile
  3735  000C84  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
  3736  000C86  6E01               	movwf	?_ADCC_GetConversionResult^0,c
  3737  000C88  0E00               	movlw	0
  3738  000C8A  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  3739  000C8C  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  3740  000C8E  0012               	return		;funcret
  3741  000C90                     __end_of_ADCC_GetConversionResult:
  3742                           	callstack 0
  3743  0000                     
  3744                           	psect	text33
  3745  000000                     __ptext33:
  3746                           	callstack 0
  3747  000000                     
  3748                           	psect	rparam
  3749  0000                     
  3750                           	psect	temp
  3751  00003F                     btemp:
  3752                           	callstack 0
  3753  00003F                     	ds	1
  3754  0000                     int$flags	set	btemp
  3755  0000                     wtemp8	set	btemp+1
  3756  0000                     ttemp5	set	btemp+1
  3757  0000                     ttemp6	set	btemp+4
  3758  0000                     ttemp7	set	btemp+8
  3759                           
  3760                           	psect	idloc
  3761                           
  3762                           ;Config register IDLOC0 @ 0x200000
  3763                           ;	unspecified, using default values
  3764  200000                     	org	2097152
  3765  200000  0FFF               	dw	4095
  3766                           
  3767                           ;Config register IDLOC1 @ 0x200002
  3768                           ;	unspecified, using default values
  3769  200002                     	org	2097154
  3770  200002  0FFF               	dw	4095
  3771                           
  3772                           ;Config register IDLOC2 @ 0x200004
  3773                           ;	unspecified, using default values
  3774  200004                     	org	2097156
  3775  200004  0FFF               	dw	4095
  3776                           
  3777                           ;Config register IDLOC3 @ 0x200006
  3778                           ;	unspecified, using default values
  3779  200006                     	org	2097158
  3780  200006  0FFF               	dw	4095
  3781                           
  3782                           ;Config register IDLOC4 @ 0x200008
  3783                           ;	unspecified, using default values
  3784  200008                     	org	2097160
  3785  200008  0FFF               	dw	4095
  3786                           
  3787                           ;Config register IDLOC5 @ 0x20000A
  3788                           ;	unspecified, using default values
  3789  20000A                     	org	2097162
  3790  20000A  0FFF               	dw	4095
  3791                           
  3792                           ;Config register IDLOC6 @ 0x20000C
  3793                           ;	unspecified, using default values
  3794  20000C                     	org	2097164
  3795  20000C  0FFF               	dw	4095
  3796                           
  3797                           ;Config register IDLOC7 @ 0x20000E
  3798                           ;	unspecified, using default values
  3799  20000E                     	org	2097166
  3800  20000E  0FFF               	dw	4095
  3801                           
  3802                           	psect	config
  3803                           
  3804                           ;Config register CONFIG1L @ 0x300000
  3805                           ;	External Oscillator mode Selection bits
  3806                           ;	FEXTOSC = OFF, Oscillator not enabled
  3807                           ;	Power-up default value for COSC bits
  3808                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3809  300000                     	org	3145728
  3810  300000  EC                 	db	236
  3811                           
  3812                           ;Config register CONFIG1H @ 0x300001
  3813                           ;	Clock Out Enable bit
  3814                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3815                           ;	Clock Switch Enable bit
  3816                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3817                           ;	Fail-Safe Clock Monitor Enable bit
  3818                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3819  300001                     	org	3145729
  3820  300001  FF                 	db	255
  3821                           
  3822                           ;Config register CONFIG2L @ 0x300002
  3823                           ;	Master Clear Enable bit
  3824                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3825                           ;	Power-up Timer Enable bit
  3826                           ;	PWRTE = OFF, Power up timer disabled
  3827                           ;	Low-power BOR enable bit
  3828                           ;	LPBOREN = OFF, ULPBOR disabled
  3829                           ;	Brown-out Reset Enable bits
  3830                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3831  300002                     	org	3145730
  3832  300002  FF                 	db	255
  3833                           
  3834                           ;Config register CONFIG2H @ 0x300003
  3835                           ;	Brown Out Reset Voltage selection bits
  3836                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3837                           ;	ZCD Disable bit
  3838                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3839                           ;	PPSLOCK bit One-Way Set Enable bit
  3840                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3841                           ;	Stack Full/Underflow Reset Enable bit
  3842                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3843                           ;	Debugger Enable bit
  3844                           ;	DEBUG = OFF, Background debugger disabled
  3845                           ;	Extended Instruction Set Enable bit
  3846                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3847  300003                     	org	3145731
  3848  300003  FF                 	db	255
  3849                           
  3850                           ;Config register CONFIG3L @ 0x300004
  3851                           ;	WDT Period Select bits
  3852                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3853                           ;	WDT operating mode
  3854                           ;	WDTE = OFF, WDT Disabled
  3855  300004                     	org	3145732
  3856  300004  9F                 	db	159
  3857                           
  3858                           ;Config register CONFIG3H @ 0x300005
  3859                           ;	WDT Window Select bits
  3860                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3861                           ;	WDT input clock selector
  3862                           ;	WDTCCS = SC, Software Control
  3863  300005                     	org	3145733
  3864  300005  FF                 	db	255
  3865                           
  3866                           ;Config register CONFIG4L @ 0x300006
  3867                           ;	Write Protection Block 0
  3868                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3869                           ;	Write Protection Block 1
  3870                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3871                           ;	Write Protection Block 2
  3872                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3873                           ;	Write Protection Block 3
  3874                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3875  300006                     	org	3145734
  3876  300006  FF                 	db	255
  3877                           
  3878                           ;Config register CONFIG4H @ 0x300007
  3879                           ;	Configuration Register Write Protection bit
  3880                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3881                           ;	Boot Block Write Protection bit
  3882                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3883                           ;	Data EEPROM Write Protection bit
  3884                           ;	WRTD = OFF, Data EEPROM not write-protected
  3885                           ;	Scanner Enable bit
  3886                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3887                           ;	Low Voltage Programming Enable bit
  3888                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3889  300007                     	org	3145735
  3890  300007  FF                 	db	255
  3891                           
  3892                           ;Config register CONFIG5L @ 0x300008
  3893                           ;	UserNVM Program Memory Code Protection bit
  3894                           ;	CP = OFF, UserNVM code protection disabled
  3895                           ;	DataNVM Memory Code Protection bit
  3896                           ;	CPD = OFF, DataNVM code protection disabled
  3897  300008                     	org	3145736
  3898  300008  FF                 	db	255
  3899                           
  3900                           ;Config register CONFIG5H @ 0x300009
  3901                           ;	unspecified, using default values
  3902  300009                     	org	3145737
  3903  300009  FF                 	db	255
  3904                           
  3905                           ;Config register CONFIG6L @ 0x30000A
  3906                           ;	Table Read Protection Block 0
  3907                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3908                           ;	Table Read Protection Block 1
  3909                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3910                           ;	Table Read Protection Block 2
  3911                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3912                           ;	Table Read Protection Block 3
  3913                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3914  30000A                     	org	3145738
  3915  30000A  FF                 	db	255
  3916                           
  3917                           ;Config register CONFIG6H @ 0x30000B
  3918                           ;	Boot Block Table Read Protection bit
  3919                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3920  30000B                     	org	3145739
  3921  30000B  FF                 	db	255
  3922                           tosu	equ	0xFFF
  3923                           tosh	equ	0xFFE
  3924                           tosl	equ	0xFFD
  3925                           stkptr	equ	0xFFC
  3926                           pclatu	equ	0xFFB
  3927                           pclath	equ	0xFFA
  3928                           pcl	equ	0xFF9
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           indf0	equ	0xFEF
  3936                           postinc0	equ	0xFEE
  3937                           postdec0	equ	0xFED
  3938                           preinc0	equ	0xFEC
  3939                           plusw0	equ	0xFEB
  3940                           fsr0h	equ	0xFEA
  3941                           fsr0l	equ	0xFE9
  3942                           wreg	equ	0xFE8
  3943                           indf1	equ	0xFE7
  3944                           postinc1	equ	0xFE6
  3945                           postdec1	equ	0xFE5
  3946                           preinc1	equ	0xFE4
  3947                           plusw1	equ	0xFE3
  3948                           fsr1h	equ	0xFE2
  3949                           fsr1l	equ	0xFE1
  3950                           bsr	equ	0xFE0
  3951                           indf2	equ	0xFDF
  3952                           postinc2	equ	0xFDE
  3953                           postdec2	equ	0xFDD
  3954                           preinc2	equ	0xFDC
  3955                           plusw2	equ	0xFDB
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         213
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      62
    BANK0           160      0     128
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Trabajando(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Trabajando(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___awdiv
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ADCC_ISR->_ADC_Trabajando
    _ADC_Trabajando->_ADCC_GetConversionResult

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    6371
                                             17 COMRAM    11    11      0
                    _ADCC_Initialize
        _ADCC_SetADIInterruptHandler
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                            ___awdiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     919
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2276
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                    _ADCC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              5 COMRAM     4     4      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADCC_ISR                                             0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                     _ADC_Trabajando *
 ---------------------------------------------------------------------------------
 (6) _ADC_Trabajando                                       1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _ADCC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_Initialize
     _ADCC_SetADIInterruptHandler
   _ADCC_SetADIInterruptHandler
   _EUSART1_Read
   _EUSART1_Write
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
   ___awdiv
   ___lwdiv
   ___lwmod
   ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_Trabajando *
       _ADCC_GetConversionResult
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      40       8       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      3E       1       66.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE       6        0.0%
DATA                 0      0      FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Oct 01 12:00:42 2021

                      _eusart1TxBufferRemaining 003E                                              l77 086C  
                                            u50 0C78                                              u51 0C72  
                                            u60 0C7A                                    ___awdiv@sign 000F  
                           ___wmul@multiplicand 000C                                             l251 0CCA  
                                           l163 0A20                                             l501 0CAC  
                                           l510 0CA2                                             l504 0CC0  
                                           l360 0C14                                             l441 08E6  
                                           l281 0C30                                             l507 0C98  
                                           l363 0C64                                             l460 0ACA  
                                           l613 0CDA                                             l366 0C4C  
                                           l447 0C7A                                             l560 010A  
                                           l465 0A34                                             l466 0A4C  
                                           l469 0A78                                             l661 0BF6  
                                           l573 01B0                                             l498 0CB6  
                                           l892 072C                                             _PR6 000FB0  
                                           u720 0A8A                                             u721 0A86  
                                           u730 0ABC                                             u731 0AB8  
                                           u740 0A34                                             u900 071C  
                                           u741 0A30                                             u901 0718  
                                           u750 0A44                                             u910 0902  
                                           u751 0A40                                             u911 08FE  
                                           u760 0A70                                             u920 0920  
                                           u761 0A6C                                             u921 091C  
                                           u850 067C                                             u930 093C  
                                           u851 0678                                             u931 0938  
                                           u860 0696                                             u940 096E  
                                           u861 0692                                             u941 096A  
                                           u870 06BC                                             u950 098C  
                                           u871 06B8                                             u951 0988  
                                           u880 06DA                                             u960 09A2  
                                           u881 06D6                                             u961 099E  
                                           u890 06F6                                             u970 0106  
                                           u891 06F2                                             u971 0102  
                                           u980 0124                                             u981 0120  
                                           u990 01A2                                             u991 019E  
                                           _adc 0024                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                  ?_ADCC_SetADIInterruptHandler 000A                                            l2010 0C9A  
                                          l2100 0AAC                                            l2004 0CC2  
                                          l2012 0C90                                            l2110 0AC8  
                                          l2102 0ABC                                            l2030 09C0  
                                          l2014 0CAE                                            l2104 0AC0  
                                          l2120 0A4E                                            l2032 0A0E  
                                          l2016 0CA4                                            l2040 0872  
                                          l1400 0C2E                                            l2200 06FE  
                                          l1152 0952                                            l2106 0AC4  
                                          l2122 0A5E                                            l2130 0A76  
                                          l2114 0A24                                            l2034 0A12  
                                          l2018 0CB8                                            l2050 089A  
                                          l2042 087E                                            l1402 0CD8  
                                          l2210 0724                                            l2202 0700  
                                          l1162 09B6                                            l2108 0AC6  
                                          l2124 0A60                                            l2116 0A24  
                                          l2036 0A14                                            l2060 08E2  
                                          l2052 089E                                            l2044 088E  
                                          l1404 0C32                                            l2204 0706  
                                          l2220 090A                                            l2300 01BC  
                                          l2126 0A70                                            l2118 0A44  
                                          l2054 08A2                                            l2046 0892  
                                          l2038 086E                                            l1406 0C4E  
                                          l2206 070C                                            l2230 0944  
                                          l2222 0912                                            l2214 08E8  
                                          l2310 02A0                                            l2302 0210  
                                          l1159 095A                                            l2128 0A74  
                                          l2056 08AE                                            l2048 0896  
                                          l1360 07EE                                            l2080 0BFC  
                                          l2208 071C                                            l2232 0946  
                                          l2224 0920                                            l2216 08F0  
                                          l2240 0976                                            l2400 0546  
                                          l2320 0310                                            l2312 02BA  
                                          l2304 0220                                            l1169 09BE  
                                          l2058 08BA                                            l1370 0820  
                                          l1362 0806                                            l2090 0C10  
                                          l2082 0C00                                            l2170 066A  
                                          l2234 094C                                            l2226 0926  
                                          l2218 0902                                            l2250 09B0  
                                          l2242 097E                                            l2410 05CA  
                                          l2402 0562                                            l2330 036A  
                                          l2322 0314                                            l2314 02BE  
                                          l2306 0224                                            l2092 0A7A  
                                          l1380 0856                                            l1372 084A  
                                          l1364 0808                                            l2084 0C04  
                                          l2180 0696                                            l2172 066E  
                                          l2228 093C                                            l2244 098C  
                                          l2236 095C                                            l2164 0BD2  
                                          l2420 062A                                            l2412 05E2  
                                          l2404 057A                                            l2340 03DC  
                                          l2332 0386                                            l2324 0330  
                                          l2316 02DA                                            l2308 0284  
                                          l2252 00DA                                            l2094 0A7A  
                                          l1382 0858                                            l1374 084C  
                                          l1366 0812                                            l2086 0C08  
                                          l2078 0BF8                                            l2190 06C4  
                                          l2182 069E                                            l2174 067C  
                                          l2246 09A2                                            l2238 096E  
                                          l2166 0BEE                                            l2422 065E  
                                          l2414 05FE                                            l2406 0596  
                                          l2350 044C                                            l2342 03F8  
                                          l2334 03A2                                            l2326 034C  
                                          l2318 02F4                                            l2270 0136  
                                          l2262 010C                                            l2254 00E2  
                                          l2096 0A8A                                            l1384 085A  
                                          l1376 084E                                            l1368 081A  
                                          l2088 0C0C                                            l2192 06CC  
                                          l2184 06A2                                            l2176 0684  
                                          l2248 09AA                                            l2416 0616  
                                          l2408 05AE                                            l2360 04BA  
                                          l2352 0466                                            l2344 0412  
                                          l2336 03BC                                            l2328 0366  
                                          l2280 0166                                            l2272 0142  
                                          l2264 0112                                            l2256 00E4  
                                          l2098 0AAA                                            l1386 085C  
                                          l1378 0850                                            l2194 06DA  
                                          l2186 06AA                                            l2178 0688  
                                          l2418 061A                                            l2370 0514  
                                          l2362 04BE                                            l2354 046A  
                                          l2346 0416                                            l2338 03C0  
                                          l2290 0190                                            l2282 016C  
                                          l2274 0148                                            l2266 0124  
                                          l2258 00F2                                            l1476 0C66  
                                          l1396 0C16                                            l2196 06E0  
                                          l2188 06BC                                            l2364 04DA  
                                          l2356 0486                                            l2348 0432  
                                          l2292 01A2                                            l2284 0178  
                                          l2276 0154                                            l2268 0130  
                                          l1398 0C2A                                            l2198 06F6  
                                          l2366 04F4                                            l2358 04A0  
                                          l2294 01A6                                            l2286 017E  
                                          l2278 015A                                            l2368 04F8  
                                          l2392 0516                                            l2464 01D2  
                                          l2296 01AC                                            l2288 018A  
                                          l2394 051A                                            l2396 052A  
                                          l2398 052E                                            u1000 0220  
                                          u1001 021C                                            u1010 02A0  
                                          u1011 029C                                            u1100 0412  
                                          u1020 02BA                                            u1101 040E  
                                          u1021 02B6                                            u1110 044C  
                                          u1030 02F4                                            u1111 0448  
                                          u1031 02F0                                            u1120 0466  
                                          u1040 0310                                            u1121 0462  
                                          u1041 030C                                            u1130 04A0  
                                          u1050 034C                                            u1131 049C  
                                          u1051 0348                                            u1140 04BA  
                                          u1060 0366                                            u1141 04B6  
                                          u1061 0362                                            u1150 04F4  
                                          u1070 03A2                                            u1151 04F0  
                                          u1071 039E                                            u1160 052A  
                                          u1080 03BC                                            u1161 0526  
                                          u1081 03B8                                            u1170 062A  
                                          u1090 03F8                                            u1171 0626  
                                          u1091 03F4                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          _T6PR 000FB0                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                                            _TMR6 000FAF  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                                __end_of_ADCC_ISR 0BA8  
                                 _EUSART1_Write 0A22                                            _main 00DA  
                                 ?_EUSART1_Read 0001                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 003F                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00D6  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 0C66  
                         _eusart1RxStatusBuffer 0060                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                                         ?_main 0001                                           _ADCLK 000F57  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                 __end_of___awdiv 072E  
                                         _ADPRE 000F5E                                           _ADRPT 000F66  
                               ___awdiv@divisor 000C                                           _T6CON 000FB1  
                               __end_of___lwdiv 095C                                           _T6HLT 000FB2  
                               __end_of___lwmod 09C0                                           i2l172 0C8E  
                                         i2l254 0CDE                                           i2l248 0BA6  
                                         i2l620 00C2                                           _T6TMR 000FAF  
                                         i2l621 009E                                           i2l551 0B42  
                                         i2l472 0B08                                           i2l482 07EC  
                                         i2l626 00C2                                           _T6RST 000FB4  
                                         i2l475 0B0C                                           i2l619 0064  
                                         i2l492 0CD0                                           i2l486 0BD0  
                                         i2l495 0CD6                                           i2l489 0CDC  
                               ___awdiv@counter 000E                                           _OSCEN 000EDC  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                            _EUSART1_Transmit_ISR 0ACC  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                ??_EUSART1_Read 000A                                           ttemp5 0040  
                                         ttemp6 0043                                           ttemp7 0047  
                                         status 000FD8                                           wtemp8 0040  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 0CDE  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 0CDC  
                               __initialization 0B44                      __end_of_EUSART1_Initialize 08E8  
                                  __end_of_main 066A                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 0012                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 0001                                   main@cont_T6PR 0014  
                               _TMR6_Initialize 0C16                                          _ADACCH 000F71  
                                        _ADACCL 000F70                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          _ADLTHH 000F6B  
                                        _ADLTHL 000F6A                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                ___awdiv@dividend 000A  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC1STA 000F9D  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0016  
                                        _RC7PPS 000EFE                                          i2l2020 0BA8  
                                        i2l2006 0C7C                                          i2l2022 0BB8  
                                        i2l2024 0BBA                                          i2l2026 0BCA  
                                        i2l2028 0BCE                                          i2l2140 0AFE  
                                        i2l2132 0ACC                                          i2l2070 0B3E  
                                        i2l2062 0CCC                                          i2l2150 075C  
                                        i2l2142 0B02                                          i2l2134 0ADC  
                                        i2l2072 0B76                                          i2l2064 0CD2  
                                        i2l2160 07CA                                          i2l2152 0776  
                                        i2l2144 072E                                          i2l2136 0AEC  
                                        i2l2066 0B0E                                          i2l2074 0B7A  
                                        i2l2162 07E8                                          i2l2154 0784  
                                        i2l2146 073E                                          i2l2138 0AEE  
                                        i2l2068 0B1A                                          i2l2076 0B8C  
                                        i2l2156 0794                                          i2l2148 074C  
                                        i2l2158 07AE                                          i2l2430 0028  
                                        i2l2440 00AC                                          i2l2432 0038  
                                        i2l2442 00BA                                          i2l2434 0046  
                                        i2l2436 0072                                          i2l2428 001A  
                                        i2l2438 0080                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        _OSCFRQ 000EDE                                          _RX1PPS 000EB5  
                                        _TX1REG 000F9A                                          _TX1STA 000F9E  
                    ??_ADCC_GetConversionResult 0003            __size_of_ADCC_SetADIInterruptHandler 000A  
                                        ___wmul 0BD2                                       ??___awdiv 000E  
                                     ??___lwdiv 000E                                       ??___lwmod 000E  
                      ?_EUSART1_SetErrorHandler 000A                                          clear_0 0B4A  
                                        clear_1 0B56                                          clear_2 0B62  
                              ___awdiv@quotient 0010                ??_EUSART1_SetOverrunErrorHandler 000C  
               ?_EUSART1_SetOverrunErrorHandler 000A                                       ?_ADCC_ISR 0001  
                               _ADCC_Initialize 09C0                                  _PMD_Initialize 0C32  
                                        tblptru 000FF8                                 ??_EUSART1_Write 000A  
   ADCC_SetADIInterruptHandler@InterruptHandler 000A                                 _eusart1RxBuffer 0100  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 00A0  
                             _SYSTEM_Initialize 0BF8                                      __accesstop 0060  
                       __end_of__initialization 0B68                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 002A  
                 __end_of_EUSART1_RxDataHandler 0BD2                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 000C                         __end_of_TMR6_Initialize 0C32  
                        __end_of_PMD_Initialize 0C4E                            __end_of_EUSART1_Read 0ACC  
                                    ??_ADCC_ISR 0006                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 07EE                       __end_of_SYSTEM_Initialize 0C16  
                                 _eusart1RxHead 002F                                   _eusart1TxHead 0031  
                                 _eusart1RxTail 002E                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 0030  
             _EUSART1_TxDefaultInterruptHandler 003A                 ??_EUSART1_SetRxInterruptHandler 000C  
                                    __pnvCOMRAM 0032                 __end_of_EUSART1_SetErrorHandler 0CC2  
                                       ?___wmul 000A                         __end_of_ADCC_Initialize 0A22  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _ADPREVL 000F61  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                               ?_PMD_Initialize 0001          __end_of_EUSART1_SetFramingErrorHandler 0CB8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0CAE  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                                         i2u70_40 0B8C  
                                       i2u70_41 0B88                                         _OSCTUNE 000EDD  
                                       i2u71_48 0B92                                         i2u71_49 0BA6  
                                       i2u81_40 0784                                         i2u80_48 0762  
                                       i2u81_41 0780                                         i2u80_49 0776  
                                       i2u83_40 07CA                                         i2u82_48 079A  
                                       i2u83_41 07C6                                         i2u82_49 07AE  
                                       i2u68_40 0BCA                                         i2u68_41 0BC6  
                                       i2u69_40 0B2A                                         i2u84_48 07D0  
                                       i2u77_40 0ADC                                         i2u69_41 0B24  
                                       i2u84_49 07E4                                         i2u77_41 0AD8  
                                       i2u69_46 0B2C                                         i2u78_40 0AFE  
                                       i2u78_41 0AFA                                         i2u79_40 074C  
                                       i2u79_41 0748                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___awdiv 066A                                 __size_of___wmul 0026  
                                       ___lwdiv 08E8                                         ___lwmod 095C  
                                       _bandera 0029                             _EUSART1_is_rx_ready 0C66  
                                       __pcinit 0B44                                ?_TMR6_Initialize 0001  
                                       __ramtop 0F00                                         __ptext0 00DA  
                                       __ptext1 0BD2                                         __ptext2 095C  
                                       __ptext3 08E8                                         __ptext4 066A  
                                       __ptext5 0BF8                                         __ptext6 0C16  
                                       __ptext7 0C32                                         __ptext8 07EE  
                                       __ptext9 0C4E                         __size_of_ADC_Trabajando 0036  
                             fp__ADC_Trabajando 0000                                         _entrega 001D  
                         _OSCILLATOR_Initialize 0C4E                                         _estados 0026  
                            _EUSART1_Initialize 086E                        ??_PIN_MANAGER_Initialize 000A  
                                     _T6CONbits 000FB1                   ??_EUSART1_DefaultErrorHandler 0001  
                                     _T6HLTbits 000FB2                      __size_of_SYSTEM_Initialize 001E  
                          end_of_initialization 0B68                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0034                                       _T6RSTbits 000FB4  
         __end_of_EUSART1_SetRxInterruptHandler 0CA4          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 0C9A                                         postinc0 000FEE  
                         __size_of_EUSART1_Read 0052                                ?_ADCC_Initialize 0001  
                          ??_EUSART1_Initialize 000C                               __size_of_ADCC_ISR 0032  
           __end_of_ADCC_SetADIInterruptHandler 0CCC                     _ADCC_SetADIInterruptHandler 0CC2  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 000A                           ??_EUSART1_is_rx_ready 000A  
                 ??_ADCC_SetADIInterruptHandler 000C                                    _EUSART1_Read 0A7A  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 0CDC  
                ??_ADCC_DefaultInterruptHandler 0001                                  __end_of___wmul 0BF8  
                        ?_OSCILLATOR_Initialize 0001               __size_of_ADCC_GetConversionResult 0014  
                     ?_ADCC_GetConversionResult 0001                             start_initialization 0B44  
               __size_of_PIN_MANAGER_Initialize 0080   EUSART1_SetRxInterruptHandler@interruptHandler 000A  
 EUSART1_SetTxInterruptHandler@interruptHandler 000A                           __end_of_EUSART1_Write 0A7A  
                        fp__EUSART1_Receive_ISR 0000                                ??_PMD_Initialize 000A  
                                      ??___wmul 000E                           _EUSART1_RxDataHandler 0BA8  
                ?_EUSART1_SetRxInterruptHandler 000A                                  _ADC_Trabajando 0B0E  
                                _eusart1RxCount 002D                                     __pbssCOMRAM 001D  
             _EUSART1_RxDefaultInterruptHandler 0038                   __size_of_EUSART1_Transmit_ISR 0042  
               ??_EUSART1_SetTxInterruptHandler 000C                ??_EUSART1_SetFramingErrorHandler 000C  
               ?_EUSART1_SetFramingErrorHandler 000A                    __size_of_EUSART1_Receive_ISR 00C0  
                              ___lwdiv@dividend 000A                          _PIN_MANAGER_Initialize 07EE  
                                     __pintcode 0008                                        ?___awdiv 000A  
                                      ?___lwdiv 000A                                        ?___lwmod 000A  
                        __end_of_ADC_Trabajando 0B44                    ??_INTERRUPT_InterruptManager 0006  
                                      _ADCC_ISR 0B76                                        _BAUD1CON 000F9F  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 0CD2  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 0CCC  
                          _EUSART1_ErrorHandler 0032                         _EUSART1_SetErrorHandler 0CB8  
                              ___lwdiv@quotient 000E                                       _error_num 002A  
                          _INTERRUPT_Initialize 0CD8                                        _T6CLKCON 000FB3  
                                ___wmul@product 000E         EUSART1_SetErrorHandler@interruptHandler 000A  
                                      _LATDbits 000F86                                        _PIE1bits 000EC3  
                                      _PIE3bits 000EC5                                        i2u120_40 0046  
                                      i2u120_41 0042                                        i2u122_40 0072  
                                      i2u121_48 004C                                        i2u122_41 006E  
                                      i2u121_49 0060                                        i2u123_40 0080  
                                      i2u123_41 007C                                        i2u125_40 00AC  
                                      i2u124_48 0086                                        i2u125_41 00A8  
                                      i2u124_49 009A                                        i2u126_40 00BA  
                                      i2u118_40 0028                                        i2u126_41 00B6  
                                      i2u118_41 0024                                        i2u119_40 0038  
                                      i2u119_41 0034             __size_of_INTERRUPT_InterruptManager 00CE  
                                      _PIR1bits 000ECB                                        _PIR3bits 000ECD  
                                      _PIR4bits 000ECE                          ?_EUSART1_RxDataHandler 0001  
                               ?_ADC_Trabajando 0001                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 000A  
                                     main@valor 001B                        __size_of_TMR6_Initialize 001C  
                         ?_INTERRUPT_Initialize 0001                           EUSART1_Read@readValue 000A  
                                    _ADSTATbits 000F65           __end_of_EUSART1_SetTxInterruptHandler 0C9A  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0C90  
                                      _TengoADC 0028                                        __Hrparam 0000  
              __end_of_ADCC_GetConversionResult 0C90                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 000A                                __size_of___awdiv 00C4  
                   __size_of_EUSART1_Initialize 007A                                __size_of___lwdiv 0074  
                              __size_of___lwmod 0064                       ??_EUSART1_SetErrorHandler 000C  
           __end_of_EUSART1_DefaultErrorHandler 0CD8                     _EUSART1_DefaultErrorHandler 0CD2  
                   __end_of_EUSART1_is_rx_ready 0C7C                        __size_of_ADCC_Initialize 0062  
                               ___lwdiv@divisor 000C                                 ___lwdiv@counter 0010  
                                      __ptext10 0CD8                                        __ptext11 086E  
                                      __ptext20 0A22                                        __ptext12 0C90  
                                      __ptext21 0A7A                                        __ptext13 0C9A  
                                      __ptext30 0CDE                                        __ptext14 0CA4  
                                      __ptext31 0B0E                                        __ptext23 0ACC  
                                      __ptext15 0CAE                                        __ptext32 0C7C  
                                      __ptext24 072E                                        __ptext16 0CB8  
                                      __ptext33 0000                                        __ptext25 0CCC  
                                      __ptext17 09C0                                        __ptext26 0CDC  
                                      __ptext18 0CC2                                        __ptext27 0CD2  
                                      __ptext19 0C66                                        __ptext28 0BA8  
                                      __ptext29 0B76                                   __size_of_main 0590  
                                      _funciona 002B                                      _RC1STAbits 000F9D  
                     _ADCC_ADI_InterruptHandler 003C  EUSART1_SetOverrunErrorHandler@interruptHandler 000A  
                                      int$flags 003F              __end_of_INTERRUPT_InterruptManager 00D6  
                    _INTERRUPT_InterruptManager 0008                                        main@pack 0016  
                   _EUSART1_FramingErrorHandler 0036                             _EUSART1_Receive_ISR 072E  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000A  
          __end_of_ADCC_DefaultInterruptHandler 0CE0           __size_of_ADCC_DefaultInterruptHandler 0002  
                  _ADCC_DefaultInterruptHandler 0CDE                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                                ___lwmod@dividend 000A  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 000A  
        __end_of_EUSART1_SetOverrunErrorHandler 0CAE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0CA4                    __end_of_EUSART1_Transmit_ISR 0B0E  
EUSART1_SetFramingErrorHandler@interruptHandler 000A                  ?_EUSART1_SetTxInterruptHandler 000A  
                      _ADCC_GetConversionResult 0C7C                          __size_of_EUSART1_Write 0058  
                            _eusart1RxLastError 002C                                 ___lwmod@divisor 000C  
                               ___lwmod@counter 000E                                      _TX1STAbits 000F9E  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 086E  
                             ??_ADCC_Initialize 000C                 fp__ADCC_DefaultInterruptHandler 0000  
                 ?_ADCC_DefaultInterruptHandler 0001                         ??_EUSART1_RxDataHandler 0001  
                              ??_ADC_Trabajando 0005  
